# Makefile.in generated by automake 1.7.7 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Makefile for veejay

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
ARCH_PPC_FALSE = @ARCH_PPC_FALSE@
ARCH_PPC_TRUE = @ARCH_PPC_TRUE@
ARCH_X86_FALSE = @ARCH_X86_FALSE@
ARCH_X86_TRUE = @ARCH_X86_TRUE@
AS = @AS@
ASFLAGS = @ASFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_VEEJAY_FALSE = @BUILD_VEEJAY_FALSE@
BUILD_VEEJAY_TRUE = @BUILD_VEEJAY_TRUE@
CAN_COMPILE_C_ALTIVEC_FALSE = @CAN_COMPILE_C_ALTIVEC_FALSE@
CAN_COMPILE_C_ALTIVEC_TRUE = @CAN_COMPILE_C_ALTIVEC_TRUE@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIRECTFB_CFLAGS = @DIRECTFB_CFLAGS@
DIRECTFB_LIBS = @DIRECTFB_LIBS@
DV_CFLAGS = @DV_CFLAGS@
DV_LIBS = @DV_LIBS@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_CONFIG = @GLIB_CONFIG@
GLIB_LIBS = @GLIB_LIBS@
HAVE_ASM_CMOV_FALSE = @HAVE_ASM_CMOV_FALSE@
HAVE_ASM_CMOV_TRUE = @HAVE_ASM_CMOV_TRUE@
HAVE_ASM_MMX2_FALSE = @HAVE_ASM_MMX2_FALSE@
HAVE_ASM_MMX2_TRUE = @HAVE_ASM_MMX2_TRUE@
HAVE_ASM_MMX_FALSE = @HAVE_ASM_MMX_FALSE@
HAVE_ASM_MMX_TRUE = @HAVE_ASM_MMX_TRUE@
HAVE_ASM_NASM_FALSE = @HAVE_ASM_NASM_FALSE@
HAVE_ASM_NASM_TRUE = @HAVE_ASM_NASM_TRUE@
HAVE_ASM_SSE_FALSE = @HAVE_ASM_SSE_FALSE@
HAVE_ASM_SSE_TRUE = @HAVE_ASM_SSE_TRUE@
HAVE_DIRECTFB_FALSE = @HAVE_DIRECTFB_FALSE@
HAVE_DIRECTFB_TRUE = @HAVE_DIRECTFB_TRUE@
HAVE_JACK_FALSE = @HAVE_JACK_FALSE@
HAVE_JACK_TRUE = @HAVE_JACK_TRUE@
HAVE_MMX_FALSE = @HAVE_MMX_FALSE@
HAVE_MMX_TRUE = @HAVE_MMX_TRUE@
HAVE_PPCCPU_FALSE = @HAVE_PPCCPU_FALSE@
HAVE_PPCCPU_TRUE = @HAVE_PPCCPU_TRUE@
HAVE_PPC_ALTIVEC_FALSE = @HAVE_PPC_ALTIVEC_FALSE@
HAVE_PPC_ALTIVEC_TRUE = @HAVE_PPC_ALTIVEC_TRUE@
HAVE_SDL_FALSE = @HAVE_SDL_FALSE@
HAVE_SDL_TRUE = @HAVE_SDL_TRUE@
HAVE_V4L_FALSE = @HAVE_V4L_FALSE@
HAVE_V4L_TRUE = @HAVE_V4L_TRUE@
HAVE_X86CPU_FALSE = @HAVE_X86CPU_FALSE@
HAVE_X86CPU_TRUE = @HAVE_X86CPU_TRUE@
HAVE_XML2_FALSE = @HAVE_XML2_FALSE@
HAVE_XML2_TRUE = @HAVE_XML2_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_LIBS = @JACK_LIBS@
JPEG_CFLAGS = @JPEG_CFLAGS@
JPEG_LIBS = @JPEG_LIBS@
LDFLAGS = @LDFLAGS@
LIBDV_PRE_0_9_9_FALSE = @LIBDV_PRE_0_9_9_FALSE@
LIBDV_PRE_0_9_9_TRUE = @LIBDV_PRE_0_9_9_TRUE@
LIBGETOPT_LIB = @LIBGETOPT_LIB@
LIBM_LIBS = @LIBM_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POW_LIB = @POW_LIB@
PRID64_STRING_FORMAT = @PRID64_STRING_FORMAT@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SYSTEM_DARWIN_FALSE = @SYSTEM_DARWIN_FALSE@
SYSTEM_DARWIN_TRUE = @SYSTEM_DARWIN_TRUE@
V4LCONF_LIBS = @V4LCONF_LIBS@
VERSION = @VERSION@
WHAT = @WHAT@
XML2_CONFIG = @XML2_CONFIG@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
x_libraries = @x_libraries@

INCLUDES = -I$(top_srcdir) -I$(includedir) \
	-DG_LOG_DOMAIN=\"veejay\" -DVEEJAY_VERSION=\"$(VERSION)\" \
        -I /usr/X11R6/include -I$(top_srcdir)/libOMC -I$(top_srcdir)/utils \
	-I$(top_srcdir)/ffmpeg/libavcodec -I$(top_srcdir)/ffmpeg/libavcodec \
	$(AVIPLAY_CFLAGS) ${GTK_CFLAGS} ${DV_FLAGS} ${X_CFLAGS} ${XML_CFLAGS} \
	$(DIRECTFB_CFLAGS) ${SDL_CFLAGS} ${JPEG_CFLAGS} ${PTHREAD_CFLAGS}  



#${IMLIB2_CFLAGS}

# *********************************************************************
VEEJAY_LIB_FILE = libveejay.la

lib_LTLIBRARIES = $(VEEJAY_LIB_FILE) 

noinst_LTLIBRARIES = liblavjpeg.la 


#libveejayinclude_HEADERS = avilib.h colorspace.h editlist.h fastmemcpy.h \
#			hash.h jpegutils.h cpu_accel.h lav_common.h lav_io.h sampleadm.h \
#			libveejay.h vj-lib.h samplerecord.h subsample.h v4lutils.h \
#			vj-OSC.h vj-audio.h vj-client.h vj-common.h vj-dfb.h \
#			vj-dv.h vj-effect.h vj-effman.h vj-event.h vj-ffmpeg.h vj-frameinfo.h \
#			vj-global.h vj-keyframe.h vj-lib.h vj-motion.h vj-perform.h vj-rgb.h \
#			vj-sdl.h vj-server.h vj-tag.h vj-v4lvideo.h vj-vloopback.h \
#			vj-yuv4mpeg.h                  
VEEJAY_ALL_LIB_OPTS = \
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
	-release $(LT_RELEASE) \
	-export-dynamic 


liblavjpeg_la_SOURCES = jpegutils.c 
liblavjpeg_la_LDFLAGS = $(VEEJAY_ALL_LIB_OPTS) $(JPEG_LIBS)

libveejay_la_SOURCES = vj-common.c cpu_accel.c memcpy.c subsample.c hash.c colorspace.c avilib.c vj-shm.c lav_io.c \
			v4lutils.c vj-server.c vj-client.c vj-osc.c vj-event.c vj-pjack.c vj-perform.c vj-frameinfo.c \
			vj-keyframe.c vj-effect.c vj-effman.c vj-motion.c vj-sdl.c vj-dfb.c sampleadm.c samplerecord.c \
			vj-vloopback.c vj-yuv4mpeg.c vj-rgb.c vj-v4lvideo.c vj-dv.c vj-ffmpeg.c vj-tag.c vj-audio.c editlist.c \
			effects/common.c effects/diff.c effects/fibdownscale.c effects/killchroma.c effects/lumamagick.c\
		        effects/mirrors.c effects/negation.c effects/opacity.c effects/posterize.c \
			effects/dither.c effects/dices.c effects/emboss.c effects/flip.c \
			effects/revtv.c effects/softblur.c effects/zoom.c effects/split.c effects/widthmirror.c \
			effects/frameborder.c effects/dummy.c effects/rawman.c effects/rawval.c \
			effects/smuck.c effects/transform.c effects/borders.c \
			effects/rgbkey.c effects/solarize.c effects/mirrors2.c \
			effects/whiteframe.c effects/deinterlace.c effects/lumakey.c \
			effects/coloradjust.c effects/gamma.c effects/reflection.c effects/rotozoom.c \
			transitions/transblend.c transitions/slidingdoor.c effects/color.c \
			transitions/transline.c transitions/transop.c transitions/transcarot.c \
			transitions/fadecolor.c effects/lumablend.c effects/chromamagick.c \
			transitions/fadecolorrgb.c effects/magicoverlays.c  effects/binaryoverlays.c effects/pencilsketch.c effects/diffimg.c \
			effects/swirl.c effects/chromium.c effects/chromapalette.c effects/radialblur.c effects/fisheye.c effects/raster.c effects/smear.c effects/magicmirror.c effects/lumamask.c effects/pixelate.c effects/colorshift.c effects/scratcher.c effects/opacitythreshold.c \
			effects/opacityadv.c effects/rgbkeysmooth.c effects/mask.c effects/distort.c \
			transitions/wipe.c effects/magicscratcher.c effects/chromascratcher.c \
			effects/tracer.c effects/mtracer.c effects/dupmagic.c effects/keyselect.c \
			effects/greyselect.c effects/bwselect.c effects/complexsaturate.c \
			effects/complexthreshold.c effects/complexinvert.c effects/complexsync.c \
			effects/isolate.c transitions/vbar.c transitions/3bar.c effects/enhancemask.c effects/noiseadd.c \
			effects/contrast.c effects/motionblur.c effects/sinoids.c effects/average.c \
		        effects/ripple.c effects/water.c effects/noisepencil.c effects/bathroom.c effects/slice.c \
			effects/crosspixel.c liblavplayvj.c


libveejay_la_LDFLAGS = $(VEEJAY_ALL_LIB_OPTS) -L$(top_builddir)/ffmpeg/libavcodec/ -lavcodec \
			-L$(top_builddir)/ccvt/ -lccvt \
			-L$(top_builddir)/libOMC/ -lOMC \
			-L$(top_builddir)/utils/ -lmjpegutils \
			-L$(top_builddir)/bio2jack/ -lbio2jack \
			${SDL_LIBS} ${DIRECTFB_LIBS} ${PTHREAD_LIBS} ${X_LIBS} \
			${XML_LIBS} ${JPEG_LIBS} \
			${DV_LIBS} \
			-DDYNAMIC -O3 -Wall -rdynamic 


# *********************************************************************
# The tools themselves
VEEJAY_BIN = veejay

bin_PROGRAMS = $(VEEJAY_BIN)  

veejay_headers = vj-lib.h vj-event.h libveejay.h vj-common.h

veejay_SOURCES = veejay.c ${veejay_headers} 
veejay_LDADD = libveejay.la liblavjpeg.la @LIBGETOPT_LIB@ @JACK_LIBS@ 
subdir = veejay
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)

liblavjpeg_la_LIBADD =
am_liblavjpeg_la_OBJECTS = jpegutils.lo
liblavjpeg_la_OBJECTS = $(am_liblavjpeg_la_OBJECTS)
libveejay_la_LIBADD =
am_libveejay_la_OBJECTS = vj-common.lo cpu_accel.lo memcpy.lo \
	subsample.lo hash.lo colorspace.lo avilib.lo vj-shm.lo \
	lav_io.lo v4lutils.lo vj-server.lo vj-client.lo vj-osc.lo \
	vj-event.lo vj-pjack.lo vj-perform.lo vj-frameinfo.lo \
	vj-keyframe.lo vj-effect.lo vj-effman.lo vj-motion.lo vj-sdl.lo \
	vj-dfb.lo sampleadm.lo samplerecord.lo vj-vloopback.lo \
	vj-yuv4mpeg.lo vj-rgb.lo vj-v4lvideo.lo vj-dv.lo vj-ffmpeg.lo \
	vj-tag.lo vj-audio.lo editlist.lo common.lo diff.lo \
	fibdownscale.lo killchroma.lo lumamagick.lo mirrors.lo \
	negation.lo opacity.lo posterize.lo dither.lo dices.lo \
	emboss.lo flip.lo revtv.lo softblur.lo zoom.lo split.lo \
	widthmirror.lo frameborder.lo dummy.lo rawman.lo rawval.lo \
	smuck.lo transform.lo borders.lo rgbkey.lo solarize.lo \
	mirrors2.lo whiteframe.lo deinterlace.lo lumakey.lo \
	coloradjust.lo gamma.lo reflection.lo rotozoom.lo transblend.lo \
	slidingdoor.lo color.lo transline.lo transop.lo transcarot.lo \
	fadecolor.lo lumablend.lo chromamagick.lo fadecolorrgb.lo \
	magicoverlays.lo binaryoverlays.lo pencilsketch.lo diffimg.lo \
	swirl.lo chromium.lo chromapalette.lo radialblur.lo fisheye.lo \
	raster.lo smear.lo magicmirror.lo lumamask.lo pixelate.lo \
	colorshift.lo scratcher.lo opacitythreshold.lo opacityadv.lo \
	rgbkeysmooth.lo mask.lo distort.lo wipe.lo magicscratcher.lo \
	chromascratcher.lo tracer.lo mtracer.lo dupmagic.lo \
	keyselect.lo greyselect.lo bwselect.lo complexsaturate.lo \
	complexthreshold.lo complexinvert.lo complexsync.lo isolate.lo \
	vbar.lo 3bar.lo enhancemask.lo noiseadd.lo contrast.lo \
	motionblur.lo sinoids.lo average.lo ripple.lo water.lo \
	noisepencil.lo bathroom.lo slice.lo crosspixel.lo \
	liblavplayvj.lo
libveejay_la_OBJECTS = $(am_libveejay_la_OBJECTS)
bin_PROGRAMS = veejay$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am__objects_1 =
am_veejay_OBJECTS = veejay.$(OBJEXT) $(am__objects_1)
veejay_OBJECTS = $(am_veejay_OBJECTS)
veejay_DEPENDENCIES = libveejay.la liblavjpeg.la
veejay_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/3bar.Plo ./$(DEPDIR)/average.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/avilib.Plo ./$(DEPDIR)/bathroom.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/binaryoverlays.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/borders.Plo ./$(DEPDIR)/bwselect.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/chromamagick.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/chromapalette.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/chromascratcher.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/chromium.Plo ./$(DEPDIR)/color.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/coloradjust.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/colorshift.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/colorspace.Plo ./$(DEPDIR)/common.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/complexinvert.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/complexsaturate.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/complexsync.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/complexthreshold.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/contrast.Plo ./$(DEPDIR)/cpu_accel.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/crosspixel.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/deinterlace.Plo ./$(DEPDIR)/dices.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/diff.Plo ./$(DEPDIR)/diffimg.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/distort.Plo ./$(DEPDIR)/dither.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/dummy.Plo ./$(DEPDIR)/dupmagic.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/editlist.Plo ./$(DEPDIR)/emboss.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/enhancemask.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fadecolor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fadecolorrgb.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fibdownscale.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fisheye.Plo ./$(DEPDIR)/flip.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/frameborder.Plo ./$(DEPDIR)/gamma.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/greyselect.Plo ./$(DEPDIR)/hash.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/isolate.Plo ./$(DEPDIR)/jpegutils.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/keyselect.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/killchroma.Plo ./$(DEPDIR)/lav_io.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/liblavplayvj.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/lumablend.Plo ./$(DEPDIR)/lumakey.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/lumamagick.Plo ./$(DEPDIR)/lumamask.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/magicmirror.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/magicoverlays.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/magicscratcher.Plo ./$(DEPDIR)/mask.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/memcpy.Plo ./$(DEPDIR)/mirrors.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/mirrors2.Plo ./$(DEPDIR)/motionblur.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/mtracer.Plo ./$(DEPDIR)/negation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/noiseadd.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/noisepencil.Plo ./$(DEPDIR)/opacity.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/opacityadv.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/opacitythreshold.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/pencilsketch.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/pixelate.Plo ./$(DEPDIR)/posterize.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/radialblur.Plo ./$(DEPDIR)/raster.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/rawman.Plo ./$(DEPDIR)/rawval.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/reflection.Plo ./$(DEPDIR)/revtv.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/rgbkey.Plo ./$(DEPDIR)/rgbkeysmooth.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ripple.Plo ./$(DEPDIR)/rotozoom.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/sampleadm.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/samplerecord.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/scratcher.Plo ./$(DEPDIR)/sinoids.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/slice.Plo ./$(DEPDIR)/slidingdoor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/smear.Plo ./$(DEPDIR)/smuck.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/softblur.Plo ./$(DEPDIR)/solarize.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/split.Plo ./$(DEPDIR)/subsample.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/swirl.Plo ./$(DEPDIR)/tracer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/transblend.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/transcarot.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/transform.Plo ./$(DEPDIR)/transline.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/transop.Plo ./$(DEPDIR)/v4lutils.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vbar.Plo ./$(DEPDIR)/veejay.Po \
@AMDEP_TRUE@	./$(DEPDIR)/vj-audio.Plo ./$(DEPDIR)/vj-client.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-common.Plo ./$(DEPDIR)/vj-dfb.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-dv.Plo ./$(DEPDIR)/vj-effect.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-effman.Plo ./$(DEPDIR)/vj-event.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-ffmpeg.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-frameinfo.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-keyframe.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-motion.Plo ./$(DEPDIR)/vj-osc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-perform.Plo ./$(DEPDIR)/vj-pjack.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-rgb.Plo ./$(DEPDIR)/vj-sdl.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-server.Plo ./$(DEPDIR)/vj-shm.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-tag.Plo ./$(DEPDIR)/vj-v4lvideo.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-vloopback.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vj-yuv4mpeg.Plo ./$(DEPDIR)/water.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/whiteframe.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/widthmirror.Plo ./$(DEPDIR)/wipe.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/zoom.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(liblavjpeg_la_SOURCES) $(libveejay_la_SOURCES) \
	$(veejay_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am TODO
SOURCES = $(liblavjpeg_la_SOURCES) $(libveejay_la_SOURCES) $(veejay_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  veejay/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
liblavjpeg.la: $(liblavjpeg_la_OBJECTS) $(liblavjpeg_la_DEPENDENCIES) 
	$(LINK)  $(liblavjpeg_la_LDFLAGS) $(liblavjpeg_la_OBJECTS) $(liblavjpeg_la_LIBADD) $(LIBS)
libveejay.la: $(libveejay_la_OBJECTS) $(libveejay_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libveejay_la_LDFLAGS) $(libveejay_la_OBJECTS) $(libveejay_la_LIBADD) $(LIBS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
veejay$(EXEEXT): $(veejay_OBJECTS) $(veejay_DEPENDENCIES) 
	@rm -f veejay$(EXEEXT)
	$(LINK) $(veejay_LDFLAGS) $(veejay_OBJECTS) $(veejay_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/3bar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/average.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/avilib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bathroom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/binaryoverlays.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/borders.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bwselect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chromamagick.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chromapalette.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chromascratcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chromium.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coloradjust.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colorshift.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colorspace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complexinvert.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complexsaturate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complexsync.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complexthreshold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contrast.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu_accel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crosspixel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deinterlace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dices.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diff.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diffimg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/distort.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dither.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dupmagic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editlist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emboss.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enhancemask.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadecolor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadecolorrgb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fibdownscale.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fisheye.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frameborder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gamma.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/greyselect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isolate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jpegutils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keyselect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/killchroma.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lav_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/liblavplayvj.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lumablend.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lumakey.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lumamagick.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lumamask.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/magicmirror.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/magicoverlays.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/magicscratcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mask.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mirrors.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mirrors2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/motionblur.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mtracer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/negation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/noiseadd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/noisepencil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opacity.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opacityadv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opacitythreshold.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pencilsketch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixelate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/posterize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/radialblur.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/raster.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rawman.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rawval.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reflection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/revtv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rgbkey.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rgbkeysmooth.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ripple.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rotozoom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sampleadm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/samplerecord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scratcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sinoids.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slidingdoor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smear.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smuck.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/softblur.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solarize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/split.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subsample.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swirl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transblend.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transcarot.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transform.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transline.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/v4lutils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vbar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/veejay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-audio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-client.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-dfb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-dv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-effect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-effman.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-event.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-ffmpeg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-frameinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-keyframe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-motion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-osc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-perform.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-pjack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-rgb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-sdl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-server.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-shm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-tag.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-v4lvideo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-vloopback.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vj-yuv4mpeg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/water.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/whiteframe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/widthmirror.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wipe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zoom.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

common.o: effects/common.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common.o -MD -MP -MF "$(DEPDIR)/common.Tpo" \
@am__fastdepCC_TRUE@	  -c -o common.o `test -f 'effects/common.c' || echo '$(srcdir)/'`effects/common.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/common.Tpo" "$(DEPDIR)/common.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/common.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/common.c' object='common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/common.Po' tmpdepfile='$(DEPDIR)/common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common.o `test -f 'effects/common.c' || echo '$(srcdir)/'`effects/common.c

common.obj: effects/common.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common.obj -MD -MP -MF "$(DEPDIR)/common.Tpo" \
@am__fastdepCC_TRUE@	  -c -o common.obj `if test -f 'effects/common.c'; then $(CYGPATH_W) 'effects/common.c'; else $(CYGPATH_W) '$(srcdir)/effects/common.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/common.Tpo" "$(DEPDIR)/common.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/common.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/common.c' object='common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/common.Po' tmpdepfile='$(DEPDIR)/common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common.obj `if test -f 'effects/common.c'; then $(CYGPATH_W) 'effects/common.c'; else $(CYGPATH_W) '$(srcdir)/effects/common.c'; fi`

common.lo: effects/common.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common.lo -MD -MP -MF "$(DEPDIR)/common.Tpo" \
@am__fastdepCC_TRUE@	  -c -o common.lo `test -f 'effects/common.c' || echo '$(srcdir)/'`effects/common.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/common.Tpo" "$(DEPDIR)/common.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/common.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/common.c' object='common.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/common.Plo' tmpdepfile='$(DEPDIR)/common.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common.lo `test -f 'effects/common.c' || echo '$(srcdir)/'`effects/common.c

diff.o: effects/diff.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT diff.o -MD -MP -MF "$(DEPDIR)/diff.Tpo" \
@am__fastdepCC_TRUE@	  -c -o diff.o `test -f 'effects/diff.c' || echo '$(srcdir)/'`effects/diff.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diff.Tpo" "$(DEPDIR)/diff.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/diff.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/diff.c' object='diff.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diff.Po' tmpdepfile='$(DEPDIR)/diff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o diff.o `test -f 'effects/diff.c' || echo '$(srcdir)/'`effects/diff.c

diff.obj: effects/diff.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT diff.obj -MD -MP -MF "$(DEPDIR)/diff.Tpo" \
@am__fastdepCC_TRUE@	  -c -o diff.obj `if test -f 'effects/diff.c'; then $(CYGPATH_W) 'effects/diff.c'; else $(CYGPATH_W) '$(srcdir)/effects/diff.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diff.Tpo" "$(DEPDIR)/diff.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/diff.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/diff.c' object='diff.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diff.Po' tmpdepfile='$(DEPDIR)/diff.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o diff.obj `if test -f 'effects/diff.c'; then $(CYGPATH_W) 'effects/diff.c'; else $(CYGPATH_W) '$(srcdir)/effects/diff.c'; fi`

diff.lo: effects/diff.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT diff.lo -MD -MP -MF "$(DEPDIR)/diff.Tpo" \
@am__fastdepCC_TRUE@	  -c -o diff.lo `test -f 'effects/diff.c' || echo '$(srcdir)/'`effects/diff.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diff.Tpo" "$(DEPDIR)/diff.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/diff.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/diff.c' object='diff.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diff.Plo' tmpdepfile='$(DEPDIR)/diff.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o diff.lo `test -f 'effects/diff.c' || echo '$(srcdir)/'`effects/diff.c

fibdownscale.o: effects/fibdownscale.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fibdownscale.o -MD -MP -MF "$(DEPDIR)/fibdownscale.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fibdownscale.o `test -f 'effects/fibdownscale.c' || echo '$(srcdir)/'`effects/fibdownscale.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fibdownscale.Tpo" "$(DEPDIR)/fibdownscale.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fibdownscale.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/fibdownscale.c' object='fibdownscale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fibdownscale.Po' tmpdepfile='$(DEPDIR)/fibdownscale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fibdownscale.o `test -f 'effects/fibdownscale.c' || echo '$(srcdir)/'`effects/fibdownscale.c

fibdownscale.obj: effects/fibdownscale.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fibdownscale.obj -MD -MP -MF "$(DEPDIR)/fibdownscale.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fibdownscale.obj `if test -f 'effects/fibdownscale.c'; then $(CYGPATH_W) 'effects/fibdownscale.c'; else $(CYGPATH_W) '$(srcdir)/effects/fibdownscale.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fibdownscale.Tpo" "$(DEPDIR)/fibdownscale.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fibdownscale.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/fibdownscale.c' object='fibdownscale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fibdownscale.Po' tmpdepfile='$(DEPDIR)/fibdownscale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fibdownscale.obj `if test -f 'effects/fibdownscale.c'; then $(CYGPATH_W) 'effects/fibdownscale.c'; else $(CYGPATH_W) '$(srcdir)/effects/fibdownscale.c'; fi`

fibdownscale.lo: effects/fibdownscale.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fibdownscale.lo -MD -MP -MF "$(DEPDIR)/fibdownscale.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fibdownscale.lo `test -f 'effects/fibdownscale.c' || echo '$(srcdir)/'`effects/fibdownscale.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fibdownscale.Tpo" "$(DEPDIR)/fibdownscale.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fibdownscale.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/fibdownscale.c' object='fibdownscale.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fibdownscale.Plo' tmpdepfile='$(DEPDIR)/fibdownscale.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fibdownscale.lo `test -f 'effects/fibdownscale.c' || echo '$(srcdir)/'`effects/fibdownscale.c

killchroma.o: effects/killchroma.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT killchroma.o -MD -MP -MF "$(DEPDIR)/killchroma.Tpo" \
@am__fastdepCC_TRUE@	  -c -o killchroma.o `test -f 'effects/killchroma.c' || echo '$(srcdir)/'`effects/killchroma.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/killchroma.Tpo" "$(DEPDIR)/killchroma.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/killchroma.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/killchroma.c' object='killchroma.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/killchroma.Po' tmpdepfile='$(DEPDIR)/killchroma.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o killchroma.o `test -f 'effects/killchroma.c' || echo '$(srcdir)/'`effects/killchroma.c

killchroma.obj: effects/killchroma.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT killchroma.obj -MD -MP -MF "$(DEPDIR)/killchroma.Tpo" \
@am__fastdepCC_TRUE@	  -c -o killchroma.obj `if test -f 'effects/killchroma.c'; then $(CYGPATH_W) 'effects/killchroma.c'; else $(CYGPATH_W) '$(srcdir)/effects/killchroma.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/killchroma.Tpo" "$(DEPDIR)/killchroma.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/killchroma.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/killchroma.c' object='killchroma.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/killchroma.Po' tmpdepfile='$(DEPDIR)/killchroma.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o killchroma.obj `if test -f 'effects/killchroma.c'; then $(CYGPATH_W) 'effects/killchroma.c'; else $(CYGPATH_W) '$(srcdir)/effects/killchroma.c'; fi`

killchroma.lo: effects/killchroma.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT killchroma.lo -MD -MP -MF "$(DEPDIR)/killchroma.Tpo" \
@am__fastdepCC_TRUE@	  -c -o killchroma.lo `test -f 'effects/killchroma.c' || echo '$(srcdir)/'`effects/killchroma.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/killchroma.Tpo" "$(DEPDIR)/killchroma.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/killchroma.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/killchroma.c' object='killchroma.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/killchroma.Plo' tmpdepfile='$(DEPDIR)/killchroma.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o killchroma.lo `test -f 'effects/killchroma.c' || echo '$(srcdir)/'`effects/killchroma.c

lumamagick.o: effects/lumamagick.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumamagick.o -MD -MP -MF "$(DEPDIR)/lumamagick.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumamagick.o `test -f 'effects/lumamagick.c' || echo '$(srcdir)/'`effects/lumamagick.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumamagick.Tpo" "$(DEPDIR)/lumamagick.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumamagick.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumamagick.c' object='lumamagick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumamagick.Po' tmpdepfile='$(DEPDIR)/lumamagick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumamagick.o `test -f 'effects/lumamagick.c' || echo '$(srcdir)/'`effects/lumamagick.c

lumamagick.obj: effects/lumamagick.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumamagick.obj -MD -MP -MF "$(DEPDIR)/lumamagick.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumamagick.obj `if test -f 'effects/lumamagick.c'; then $(CYGPATH_W) 'effects/lumamagick.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumamagick.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumamagick.Tpo" "$(DEPDIR)/lumamagick.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumamagick.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumamagick.c' object='lumamagick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumamagick.Po' tmpdepfile='$(DEPDIR)/lumamagick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumamagick.obj `if test -f 'effects/lumamagick.c'; then $(CYGPATH_W) 'effects/lumamagick.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumamagick.c'; fi`

lumamagick.lo: effects/lumamagick.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumamagick.lo -MD -MP -MF "$(DEPDIR)/lumamagick.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumamagick.lo `test -f 'effects/lumamagick.c' || echo '$(srcdir)/'`effects/lumamagick.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumamagick.Tpo" "$(DEPDIR)/lumamagick.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumamagick.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumamagick.c' object='lumamagick.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumamagick.Plo' tmpdepfile='$(DEPDIR)/lumamagick.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumamagick.lo `test -f 'effects/lumamagick.c' || echo '$(srcdir)/'`effects/lumamagick.c

mirrors.o: effects/mirrors.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mirrors.o -MD -MP -MF "$(DEPDIR)/mirrors.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mirrors.o `test -f 'effects/mirrors.c' || echo '$(srcdir)/'`effects/mirrors.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mirrors.Tpo" "$(DEPDIR)/mirrors.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mirrors.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mirrors.c' object='mirrors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mirrors.Po' tmpdepfile='$(DEPDIR)/mirrors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mirrors.o `test -f 'effects/mirrors.c' || echo '$(srcdir)/'`effects/mirrors.c

mirrors.obj: effects/mirrors.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mirrors.obj -MD -MP -MF "$(DEPDIR)/mirrors.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mirrors.obj `if test -f 'effects/mirrors.c'; then $(CYGPATH_W) 'effects/mirrors.c'; else $(CYGPATH_W) '$(srcdir)/effects/mirrors.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mirrors.Tpo" "$(DEPDIR)/mirrors.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mirrors.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mirrors.c' object='mirrors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mirrors.Po' tmpdepfile='$(DEPDIR)/mirrors.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mirrors.obj `if test -f 'effects/mirrors.c'; then $(CYGPATH_W) 'effects/mirrors.c'; else $(CYGPATH_W) '$(srcdir)/effects/mirrors.c'; fi`

mirrors.lo: effects/mirrors.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mirrors.lo -MD -MP -MF "$(DEPDIR)/mirrors.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mirrors.lo `test -f 'effects/mirrors.c' || echo '$(srcdir)/'`effects/mirrors.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mirrors.Tpo" "$(DEPDIR)/mirrors.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mirrors.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mirrors.c' object='mirrors.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mirrors.Plo' tmpdepfile='$(DEPDIR)/mirrors.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mirrors.lo `test -f 'effects/mirrors.c' || echo '$(srcdir)/'`effects/mirrors.c

negation.o: effects/negation.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT negation.o -MD -MP -MF "$(DEPDIR)/negation.Tpo" \
@am__fastdepCC_TRUE@	  -c -o negation.o `test -f 'effects/negation.c' || echo '$(srcdir)/'`effects/negation.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/negation.Tpo" "$(DEPDIR)/negation.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/negation.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/negation.c' object='negation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/negation.Po' tmpdepfile='$(DEPDIR)/negation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o negation.o `test -f 'effects/negation.c' || echo '$(srcdir)/'`effects/negation.c

negation.obj: effects/negation.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT negation.obj -MD -MP -MF "$(DEPDIR)/negation.Tpo" \
@am__fastdepCC_TRUE@	  -c -o negation.obj `if test -f 'effects/negation.c'; then $(CYGPATH_W) 'effects/negation.c'; else $(CYGPATH_W) '$(srcdir)/effects/negation.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/negation.Tpo" "$(DEPDIR)/negation.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/negation.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/negation.c' object='negation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/negation.Po' tmpdepfile='$(DEPDIR)/negation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o negation.obj `if test -f 'effects/negation.c'; then $(CYGPATH_W) 'effects/negation.c'; else $(CYGPATH_W) '$(srcdir)/effects/negation.c'; fi`

negation.lo: effects/negation.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT negation.lo -MD -MP -MF "$(DEPDIR)/negation.Tpo" \
@am__fastdepCC_TRUE@	  -c -o negation.lo `test -f 'effects/negation.c' || echo '$(srcdir)/'`effects/negation.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/negation.Tpo" "$(DEPDIR)/negation.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/negation.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/negation.c' object='negation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/negation.Plo' tmpdepfile='$(DEPDIR)/negation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o negation.lo `test -f 'effects/negation.c' || echo '$(srcdir)/'`effects/negation.c

opacity.o: effects/opacity.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacity.o -MD -MP -MF "$(DEPDIR)/opacity.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacity.o `test -f 'effects/opacity.c' || echo '$(srcdir)/'`effects/opacity.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacity.Tpo" "$(DEPDIR)/opacity.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacity.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacity.c' object='opacity.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacity.Po' tmpdepfile='$(DEPDIR)/opacity.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacity.o `test -f 'effects/opacity.c' || echo '$(srcdir)/'`effects/opacity.c

opacity.obj: effects/opacity.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacity.obj -MD -MP -MF "$(DEPDIR)/opacity.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacity.obj `if test -f 'effects/opacity.c'; then $(CYGPATH_W) 'effects/opacity.c'; else $(CYGPATH_W) '$(srcdir)/effects/opacity.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacity.Tpo" "$(DEPDIR)/opacity.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacity.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacity.c' object='opacity.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacity.Po' tmpdepfile='$(DEPDIR)/opacity.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacity.obj `if test -f 'effects/opacity.c'; then $(CYGPATH_W) 'effects/opacity.c'; else $(CYGPATH_W) '$(srcdir)/effects/opacity.c'; fi`

opacity.lo: effects/opacity.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacity.lo -MD -MP -MF "$(DEPDIR)/opacity.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacity.lo `test -f 'effects/opacity.c' || echo '$(srcdir)/'`effects/opacity.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacity.Tpo" "$(DEPDIR)/opacity.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacity.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacity.c' object='opacity.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacity.Plo' tmpdepfile='$(DEPDIR)/opacity.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacity.lo `test -f 'effects/opacity.c' || echo '$(srcdir)/'`effects/opacity.c

posterize.o: effects/posterize.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT posterize.o -MD -MP -MF "$(DEPDIR)/posterize.Tpo" \
@am__fastdepCC_TRUE@	  -c -o posterize.o `test -f 'effects/posterize.c' || echo '$(srcdir)/'`effects/posterize.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/posterize.Tpo" "$(DEPDIR)/posterize.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/posterize.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/posterize.c' object='posterize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/posterize.Po' tmpdepfile='$(DEPDIR)/posterize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posterize.o `test -f 'effects/posterize.c' || echo '$(srcdir)/'`effects/posterize.c

posterize.obj: effects/posterize.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT posterize.obj -MD -MP -MF "$(DEPDIR)/posterize.Tpo" \
@am__fastdepCC_TRUE@	  -c -o posterize.obj `if test -f 'effects/posterize.c'; then $(CYGPATH_W) 'effects/posterize.c'; else $(CYGPATH_W) '$(srcdir)/effects/posterize.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/posterize.Tpo" "$(DEPDIR)/posterize.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/posterize.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/posterize.c' object='posterize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/posterize.Po' tmpdepfile='$(DEPDIR)/posterize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posterize.obj `if test -f 'effects/posterize.c'; then $(CYGPATH_W) 'effects/posterize.c'; else $(CYGPATH_W) '$(srcdir)/effects/posterize.c'; fi`

posterize.lo: effects/posterize.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT posterize.lo -MD -MP -MF "$(DEPDIR)/posterize.Tpo" \
@am__fastdepCC_TRUE@	  -c -o posterize.lo `test -f 'effects/posterize.c' || echo '$(srcdir)/'`effects/posterize.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/posterize.Tpo" "$(DEPDIR)/posterize.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/posterize.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/posterize.c' object='posterize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/posterize.Plo' tmpdepfile='$(DEPDIR)/posterize.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posterize.lo `test -f 'effects/posterize.c' || echo '$(srcdir)/'`effects/posterize.c

dither.o: effects/dither.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dither.o -MD -MP -MF "$(DEPDIR)/dither.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dither.o `test -f 'effects/dither.c' || echo '$(srcdir)/'`effects/dither.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dither.Tpo" "$(DEPDIR)/dither.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dither.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dither.c' object='dither.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dither.Po' tmpdepfile='$(DEPDIR)/dither.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dither.o `test -f 'effects/dither.c' || echo '$(srcdir)/'`effects/dither.c

dither.obj: effects/dither.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dither.obj -MD -MP -MF "$(DEPDIR)/dither.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dither.obj `if test -f 'effects/dither.c'; then $(CYGPATH_W) 'effects/dither.c'; else $(CYGPATH_W) '$(srcdir)/effects/dither.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dither.Tpo" "$(DEPDIR)/dither.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dither.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dither.c' object='dither.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dither.Po' tmpdepfile='$(DEPDIR)/dither.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dither.obj `if test -f 'effects/dither.c'; then $(CYGPATH_W) 'effects/dither.c'; else $(CYGPATH_W) '$(srcdir)/effects/dither.c'; fi`

dither.lo: effects/dither.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dither.lo -MD -MP -MF "$(DEPDIR)/dither.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dither.lo `test -f 'effects/dither.c' || echo '$(srcdir)/'`effects/dither.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dither.Tpo" "$(DEPDIR)/dither.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dither.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dither.c' object='dither.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dither.Plo' tmpdepfile='$(DEPDIR)/dither.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dither.lo `test -f 'effects/dither.c' || echo '$(srcdir)/'`effects/dither.c

dices.o: effects/dices.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dices.o -MD -MP -MF "$(DEPDIR)/dices.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dices.o `test -f 'effects/dices.c' || echo '$(srcdir)/'`effects/dices.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dices.Tpo" "$(DEPDIR)/dices.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dices.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dices.c' object='dices.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dices.Po' tmpdepfile='$(DEPDIR)/dices.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dices.o `test -f 'effects/dices.c' || echo '$(srcdir)/'`effects/dices.c

dices.obj: effects/dices.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dices.obj -MD -MP -MF "$(DEPDIR)/dices.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dices.obj `if test -f 'effects/dices.c'; then $(CYGPATH_W) 'effects/dices.c'; else $(CYGPATH_W) '$(srcdir)/effects/dices.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dices.Tpo" "$(DEPDIR)/dices.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dices.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dices.c' object='dices.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dices.Po' tmpdepfile='$(DEPDIR)/dices.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dices.obj `if test -f 'effects/dices.c'; then $(CYGPATH_W) 'effects/dices.c'; else $(CYGPATH_W) '$(srcdir)/effects/dices.c'; fi`

dices.lo: effects/dices.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dices.lo -MD -MP -MF "$(DEPDIR)/dices.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dices.lo `test -f 'effects/dices.c' || echo '$(srcdir)/'`effects/dices.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dices.Tpo" "$(DEPDIR)/dices.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dices.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dices.c' object='dices.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dices.Plo' tmpdepfile='$(DEPDIR)/dices.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dices.lo `test -f 'effects/dices.c' || echo '$(srcdir)/'`effects/dices.c

emboss.o: effects/emboss.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT emboss.o -MD -MP -MF "$(DEPDIR)/emboss.Tpo" \
@am__fastdepCC_TRUE@	  -c -o emboss.o `test -f 'effects/emboss.c' || echo '$(srcdir)/'`effects/emboss.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/emboss.Tpo" "$(DEPDIR)/emboss.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/emboss.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/emboss.c' object='emboss.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/emboss.Po' tmpdepfile='$(DEPDIR)/emboss.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o emboss.o `test -f 'effects/emboss.c' || echo '$(srcdir)/'`effects/emboss.c

emboss.obj: effects/emboss.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT emboss.obj -MD -MP -MF "$(DEPDIR)/emboss.Tpo" \
@am__fastdepCC_TRUE@	  -c -o emboss.obj `if test -f 'effects/emboss.c'; then $(CYGPATH_W) 'effects/emboss.c'; else $(CYGPATH_W) '$(srcdir)/effects/emboss.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/emboss.Tpo" "$(DEPDIR)/emboss.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/emboss.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/emboss.c' object='emboss.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/emboss.Po' tmpdepfile='$(DEPDIR)/emboss.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o emboss.obj `if test -f 'effects/emboss.c'; then $(CYGPATH_W) 'effects/emboss.c'; else $(CYGPATH_W) '$(srcdir)/effects/emboss.c'; fi`

emboss.lo: effects/emboss.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT emboss.lo -MD -MP -MF "$(DEPDIR)/emboss.Tpo" \
@am__fastdepCC_TRUE@	  -c -o emboss.lo `test -f 'effects/emboss.c' || echo '$(srcdir)/'`effects/emboss.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/emboss.Tpo" "$(DEPDIR)/emboss.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/emboss.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/emboss.c' object='emboss.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/emboss.Plo' tmpdepfile='$(DEPDIR)/emboss.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o emboss.lo `test -f 'effects/emboss.c' || echo '$(srcdir)/'`effects/emboss.c

flip.o: effects/flip.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT flip.o -MD -MP -MF "$(DEPDIR)/flip.Tpo" \
@am__fastdepCC_TRUE@	  -c -o flip.o `test -f 'effects/flip.c' || echo '$(srcdir)/'`effects/flip.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/flip.Tpo" "$(DEPDIR)/flip.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/flip.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/flip.c' object='flip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/flip.Po' tmpdepfile='$(DEPDIR)/flip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o flip.o `test -f 'effects/flip.c' || echo '$(srcdir)/'`effects/flip.c

flip.obj: effects/flip.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT flip.obj -MD -MP -MF "$(DEPDIR)/flip.Tpo" \
@am__fastdepCC_TRUE@	  -c -o flip.obj `if test -f 'effects/flip.c'; then $(CYGPATH_W) 'effects/flip.c'; else $(CYGPATH_W) '$(srcdir)/effects/flip.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/flip.Tpo" "$(DEPDIR)/flip.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/flip.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/flip.c' object='flip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/flip.Po' tmpdepfile='$(DEPDIR)/flip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o flip.obj `if test -f 'effects/flip.c'; then $(CYGPATH_W) 'effects/flip.c'; else $(CYGPATH_W) '$(srcdir)/effects/flip.c'; fi`

flip.lo: effects/flip.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT flip.lo -MD -MP -MF "$(DEPDIR)/flip.Tpo" \
@am__fastdepCC_TRUE@	  -c -o flip.lo `test -f 'effects/flip.c' || echo '$(srcdir)/'`effects/flip.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/flip.Tpo" "$(DEPDIR)/flip.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/flip.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/flip.c' object='flip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/flip.Plo' tmpdepfile='$(DEPDIR)/flip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o flip.lo `test -f 'effects/flip.c' || echo '$(srcdir)/'`effects/flip.c

revtv.o: effects/revtv.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT revtv.o -MD -MP -MF "$(DEPDIR)/revtv.Tpo" \
@am__fastdepCC_TRUE@	  -c -o revtv.o `test -f 'effects/revtv.c' || echo '$(srcdir)/'`effects/revtv.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/revtv.Tpo" "$(DEPDIR)/revtv.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/revtv.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/revtv.c' object='revtv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/revtv.Po' tmpdepfile='$(DEPDIR)/revtv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o revtv.o `test -f 'effects/revtv.c' || echo '$(srcdir)/'`effects/revtv.c

revtv.obj: effects/revtv.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT revtv.obj -MD -MP -MF "$(DEPDIR)/revtv.Tpo" \
@am__fastdepCC_TRUE@	  -c -o revtv.obj `if test -f 'effects/revtv.c'; then $(CYGPATH_W) 'effects/revtv.c'; else $(CYGPATH_W) '$(srcdir)/effects/revtv.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/revtv.Tpo" "$(DEPDIR)/revtv.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/revtv.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/revtv.c' object='revtv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/revtv.Po' tmpdepfile='$(DEPDIR)/revtv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o revtv.obj `if test -f 'effects/revtv.c'; then $(CYGPATH_W) 'effects/revtv.c'; else $(CYGPATH_W) '$(srcdir)/effects/revtv.c'; fi`

revtv.lo: effects/revtv.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT revtv.lo -MD -MP -MF "$(DEPDIR)/revtv.Tpo" \
@am__fastdepCC_TRUE@	  -c -o revtv.lo `test -f 'effects/revtv.c' || echo '$(srcdir)/'`effects/revtv.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/revtv.Tpo" "$(DEPDIR)/revtv.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/revtv.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/revtv.c' object='revtv.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/revtv.Plo' tmpdepfile='$(DEPDIR)/revtv.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o revtv.lo `test -f 'effects/revtv.c' || echo '$(srcdir)/'`effects/revtv.c

softblur.o: effects/softblur.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT softblur.o -MD -MP -MF "$(DEPDIR)/softblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o softblur.o `test -f 'effects/softblur.c' || echo '$(srcdir)/'`effects/softblur.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/softblur.Tpo" "$(DEPDIR)/softblur.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/softblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/softblur.c' object='softblur.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/softblur.Po' tmpdepfile='$(DEPDIR)/softblur.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o softblur.o `test -f 'effects/softblur.c' || echo '$(srcdir)/'`effects/softblur.c

softblur.obj: effects/softblur.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT softblur.obj -MD -MP -MF "$(DEPDIR)/softblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o softblur.obj `if test -f 'effects/softblur.c'; then $(CYGPATH_W) 'effects/softblur.c'; else $(CYGPATH_W) '$(srcdir)/effects/softblur.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/softblur.Tpo" "$(DEPDIR)/softblur.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/softblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/softblur.c' object='softblur.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/softblur.Po' tmpdepfile='$(DEPDIR)/softblur.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o softblur.obj `if test -f 'effects/softblur.c'; then $(CYGPATH_W) 'effects/softblur.c'; else $(CYGPATH_W) '$(srcdir)/effects/softblur.c'; fi`

softblur.lo: effects/softblur.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT softblur.lo -MD -MP -MF "$(DEPDIR)/softblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o softblur.lo `test -f 'effects/softblur.c' || echo '$(srcdir)/'`effects/softblur.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/softblur.Tpo" "$(DEPDIR)/softblur.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/softblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/softblur.c' object='softblur.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/softblur.Plo' tmpdepfile='$(DEPDIR)/softblur.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o softblur.lo `test -f 'effects/softblur.c' || echo '$(srcdir)/'`effects/softblur.c

zoom.o: effects/zoom.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zoom.o -MD -MP -MF "$(DEPDIR)/zoom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o zoom.o `test -f 'effects/zoom.c' || echo '$(srcdir)/'`effects/zoom.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/zoom.Tpo" "$(DEPDIR)/zoom.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/zoom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/zoom.c' object='zoom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/zoom.Po' tmpdepfile='$(DEPDIR)/zoom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zoom.o `test -f 'effects/zoom.c' || echo '$(srcdir)/'`effects/zoom.c

zoom.obj: effects/zoom.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zoom.obj -MD -MP -MF "$(DEPDIR)/zoom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o zoom.obj `if test -f 'effects/zoom.c'; then $(CYGPATH_W) 'effects/zoom.c'; else $(CYGPATH_W) '$(srcdir)/effects/zoom.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/zoom.Tpo" "$(DEPDIR)/zoom.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/zoom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/zoom.c' object='zoom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/zoom.Po' tmpdepfile='$(DEPDIR)/zoom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zoom.obj `if test -f 'effects/zoom.c'; then $(CYGPATH_W) 'effects/zoom.c'; else $(CYGPATH_W) '$(srcdir)/effects/zoom.c'; fi`

zoom.lo: effects/zoom.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zoom.lo -MD -MP -MF "$(DEPDIR)/zoom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o zoom.lo `test -f 'effects/zoom.c' || echo '$(srcdir)/'`effects/zoom.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/zoom.Tpo" "$(DEPDIR)/zoom.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/zoom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/zoom.c' object='zoom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/zoom.Plo' tmpdepfile='$(DEPDIR)/zoom.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zoom.lo `test -f 'effects/zoom.c' || echo '$(srcdir)/'`effects/zoom.c

split.o: effects/split.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT split.o -MD -MP -MF "$(DEPDIR)/split.Tpo" \
@am__fastdepCC_TRUE@	  -c -o split.o `test -f 'effects/split.c' || echo '$(srcdir)/'`effects/split.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/split.Tpo" "$(DEPDIR)/split.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/split.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/split.c' object='split.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/split.Po' tmpdepfile='$(DEPDIR)/split.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o split.o `test -f 'effects/split.c' || echo '$(srcdir)/'`effects/split.c

split.obj: effects/split.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT split.obj -MD -MP -MF "$(DEPDIR)/split.Tpo" \
@am__fastdepCC_TRUE@	  -c -o split.obj `if test -f 'effects/split.c'; then $(CYGPATH_W) 'effects/split.c'; else $(CYGPATH_W) '$(srcdir)/effects/split.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/split.Tpo" "$(DEPDIR)/split.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/split.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/split.c' object='split.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/split.Po' tmpdepfile='$(DEPDIR)/split.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o split.obj `if test -f 'effects/split.c'; then $(CYGPATH_W) 'effects/split.c'; else $(CYGPATH_W) '$(srcdir)/effects/split.c'; fi`

split.lo: effects/split.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT split.lo -MD -MP -MF "$(DEPDIR)/split.Tpo" \
@am__fastdepCC_TRUE@	  -c -o split.lo `test -f 'effects/split.c' || echo '$(srcdir)/'`effects/split.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/split.Tpo" "$(DEPDIR)/split.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/split.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/split.c' object='split.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/split.Plo' tmpdepfile='$(DEPDIR)/split.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o split.lo `test -f 'effects/split.c' || echo '$(srcdir)/'`effects/split.c

widthmirror.o: effects/widthmirror.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT widthmirror.o -MD -MP -MF "$(DEPDIR)/widthmirror.Tpo" \
@am__fastdepCC_TRUE@	  -c -o widthmirror.o `test -f 'effects/widthmirror.c' || echo '$(srcdir)/'`effects/widthmirror.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/widthmirror.Tpo" "$(DEPDIR)/widthmirror.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/widthmirror.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/widthmirror.c' object='widthmirror.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/widthmirror.Po' tmpdepfile='$(DEPDIR)/widthmirror.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o widthmirror.o `test -f 'effects/widthmirror.c' || echo '$(srcdir)/'`effects/widthmirror.c

widthmirror.obj: effects/widthmirror.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT widthmirror.obj -MD -MP -MF "$(DEPDIR)/widthmirror.Tpo" \
@am__fastdepCC_TRUE@	  -c -o widthmirror.obj `if test -f 'effects/widthmirror.c'; then $(CYGPATH_W) 'effects/widthmirror.c'; else $(CYGPATH_W) '$(srcdir)/effects/widthmirror.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/widthmirror.Tpo" "$(DEPDIR)/widthmirror.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/widthmirror.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/widthmirror.c' object='widthmirror.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/widthmirror.Po' tmpdepfile='$(DEPDIR)/widthmirror.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o widthmirror.obj `if test -f 'effects/widthmirror.c'; then $(CYGPATH_W) 'effects/widthmirror.c'; else $(CYGPATH_W) '$(srcdir)/effects/widthmirror.c'; fi`

widthmirror.lo: effects/widthmirror.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT widthmirror.lo -MD -MP -MF "$(DEPDIR)/widthmirror.Tpo" \
@am__fastdepCC_TRUE@	  -c -o widthmirror.lo `test -f 'effects/widthmirror.c' || echo '$(srcdir)/'`effects/widthmirror.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/widthmirror.Tpo" "$(DEPDIR)/widthmirror.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/widthmirror.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/widthmirror.c' object='widthmirror.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/widthmirror.Plo' tmpdepfile='$(DEPDIR)/widthmirror.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o widthmirror.lo `test -f 'effects/widthmirror.c' || echo '$(srcdir)/'`effects/widthmirror.c

frameborder.o: effects/frameborder.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT frameborder.o -MD -MP -MF "$(DEPDIR)/frameborder.Tpo" \
@am__fastdepCC_TRUE@	  -c -o frameborder.o `test -f 'effects/frameborder.c' || echo '$(srcdir)/'`effects/frameborder.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/frameborder.Tpo" "$(DEPDIR)/frameborder.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/frameborder.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/frameborder.c' object='frameborder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/frameborder.Po' tmpdepfile='$(DEPDIR)/frameborder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o frameborder.o `test -f 'effects/frameborder.c' || echo '$(srcdir)/'`effects/frameborder.c

frameborder.obj: effects/frameborder.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT frameborder.obj -MD -MP -MF "$(DEPDIR)/frameborder.Tpo" \
@am__fastdepCC_TRUE@	  -c -o frameborder.obj `if test -f 'effects/frameborder.c'; then $(CYGPATH_W) 'effects/frameborder.c'; else $(CYGPATH_W) '$(srcdir)/effects/frameborder.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/frameborder.Tpo" "$(DEPDIR)/frameborder.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/frameborder.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/frameborder.c' object='frameborder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/frameborder.Po' tmpdepfile='$(DEPDIR)/frameborder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o frameborder.obj `if test -f 'effects/frameborder.c'; then $(CYGPATH_W) 'effects/frameborder.c'; else $(CYGPATH_W) '$(srcdir)/effects/frameborder.c'; fi`

frameborder.lo: effects/frameborder.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT frameborder.lo -MD -MP -MF "$(DEPDIR)/frameborder.Tpo" \
@am__fastdepCC_TRUE@	  -c -o frameborder.lo `test -f 'effects/frameborder.c' || echo '$(srcdir)/'`effects/frameborder.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/frameborder.Tpo" "$(DEPDIR)/frameborder.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/frameborder.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/frameborder.c' object='frameborder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/frameborder.Plo' tmpdepfile='$(DEPDIR)/frameborder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o frameborder.lo `test -f 'effects/frameborder.c' || echo '$(srcdir)/'`effects/frameborder.c

dummy.o: effects/dummy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy.o -MD -MP -MF "$(DEPDIR)/dummy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dummy.o `test -f 'effects/dummy.c' || echo '$(srcdir)/'`effects/dummy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dummy.Tpo" "$(DEPDIR)/dummy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dummy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dummy.c' object='dummy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dummy.Po' tmpdepfile='$(DEPDIR)/dummy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy.o `test -f 'effects/dummy.c' || echo '$(srcdir)/'`effects/dummy.c

dummy.obj: effects/dummy.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy.obj -MD -MP -MF "$(DEPDIR)/dummy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dummy.obj `if test -f 'effects/dummy.c'; then $(CYGPATH_W) 'effects/dummy.c'; else $(CYGPATH_W) '$(srcdir)/effects/dummy.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dummy.Tpo" "$(DEPDIR)/dummy.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dummy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dummy.c' object='dummy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dummy.Po' tmpdepfile='$(DEPDIR)/dummy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy.obj `if test -f 'effects/dummy.c'; then $(CYGPATH_W) 'effects/dummy.c'; else $(CYGPATH_W) '$(srcdir)/effects/dummy.c'; fi`

dummy.lo: effects/dummy.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy.lo -MD -MP -MF "$(DEPDIR)/dummy.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dummy.lo `test -f 'effects/dummy.c' || echo '$(srcdir)/'`effects/dummy.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dummy.Tpo" "$(DEPDIR)/dummy.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dummy.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dummy.c' object='dummy.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dummy.Plo' tmpdepfile='$(DEPDIR)/dummy.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy.lo `test -f 'effects/dummy.c' || echo '$(srcdir)/'`effects/dummy.c

rawman.o: effects/rawman.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawman.o -MD -MP -MF "$(DEPDIR)/rawman.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rawman.o `test -f 'effects/rawman.c' || echo '$(srcdir)/'`effects/rawman.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rawman.Tpo" "$(DEPDIR)/rawman.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rawman.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rawman.c' object='rawman.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rawman.Po' tmpdepfile='$(DEPDIR)/rawman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawman.o `test -f 'effects/rawman.c' || echo '$(srcdir)/'`effects/rawman.c

rawman.obj: effects/rawman.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawman.obj -MD -MP -MF "$(DEPDIR)/rawman.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rawman.obj `if test -f 'effects/rawman.c'; then $(CYGPATH_W) 'effects/rawman.c'; else $(CYGPATH_W) '$(srcdir)/effects/rawman.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rawman.Tpo" "$(DEPDIR)/rawman.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rawman.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rawman.c' object='rawman.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rawman.Po' tmpdepfile='$(DEPDIR)/rawman.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawman.obj `if test -f 'effects/rawman.c'; then $(CYGPATH_W) 'effects/rawman.c'; else $(CYGPATH_W) '$(srcdir)/effects/rawman.c'; fi`

rawman.lo: effects/rawman.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawman.lo -MD -MP -MF "$(DEPDIR)/rawman.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rawman.lo `test -f 'effects/rawman.c' || echo '$(srcdir)/'`effects/rawman.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rawman.Tpo" "$(DEPDIR)/rawman.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rawman.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rawman.c' object='rawman.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rawman.Plo' tmpdepfile='$(DEPDIR)/rawman.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawman.lo `test -f 'effects/rawman.c' || echo '$(srcdir)/'`effects/rawman.c

rawval.o: effects/rawval.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawval.o -MD -MP -MF "$(DEPDIR)/rawval.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rawval.o `test -f 'effects/rawval.c' || echo '$(srcdir)/'`effects/rawval.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rawval.Tpo" "$(DEPDIR)/rawval.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rawval.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rawval.c' object='rawval.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rawval.Po' tmpdepfile='$(DEPDIR)/rawval.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawval.o `test -f 'effects/rawval.c' || echo '$(srcdir)/'`effects/rawval.c

rawval.obj: effects/rawval.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawval.obj -MD -MP -MF "$(DEPDIR)/rawval.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rawval.obj `if test -f 'effects/rawval.c'; then $(CYGPATH_W) 'effects/rawval.c'; else $(CYGPATH_W) '$(srcdir)/effects/rawval.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rawval.Tpo" "$(DEPDIR)/rawval.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rawval.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rawval.c' object='rawval.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rawval.Po' tmpdepfile='$(DEPDIR)/rawval.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawval.obj `if test -f 'effects/rawval.c'; then $(CYGPATH_W) 'effects/rawval.c'; else $(CYGPATH_W) '$(srcdir)/effects/rawval.c'; fi`

rawval.lo: effects/rawval.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rawval.lo -MD -MP -MF "$(DEPDIR)/rawval.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rawval.lo `test -f 'effects/rawval.c' || echo '$(srcdir)/'`effects/rawval.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rawval.Tpo" "$(DEPDIR)/rawval.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rawval.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rawval.c' object='rawval.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rawval.Plo' tmpdepfile='$(DEPDIR)/rawval.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rawval.lo `test -f 'effects/rawval.c' || echo '$(srcdir)/'`effects/rawval.c

smuck.o: effects/smuck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smuck.o -MD -MP -MF "$(DEPDIR)/smuck.Tpo" \
@am__fastdepCC_TRUE@	  -c -o smuck.o `test -f 'effects/smuck.c' || echo '$(srcdir)/'`effects/smuck.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/smuck.Tpo" "$(DEPDIR)/smuck.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/smuck.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/smuck.c' object='smuck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/smuck.Po' tmpdepfile='$(DEPDIR)/smuck.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smuck.o `test -f 'effects/smuck.c' || echo '$(srcdir)/'`effects/smuck.c

smuck.obj: effects/smuck.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smuck.obj -MD -MP -MF "$(DEPDIR)/smuck.Tpo" \
@am__fastdepCC_TRUE@	  -c -o smuck.obj `if test -f 'effects/smuck.c'; then $(CYGPATH_W) 'effects/smuck.c'; else $(CYGPATH_W) '$(srcdir)/effects/smuck.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/smuck.Tpo" "$(DEPDIR)/smuck.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/smuck.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/smuck.c' object='smuck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/smuck.Po' tmpdepfile='$(DEPDIR)/smuck.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smuck.obj `if test -f 'effects/smuck.c'; then $(CYGPATH_W) 'effects/smuck.c'; else $(CYGPATH_W) '$(srcdir)/effects/smuck.c'; fi`

smuck.lo: effects/smuck.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smuck.lo -MD -MP -MF "$(DEPDIR)/smuck.Tpo" \
@am__fastdepCC_TRUE@	  -c -o smuck.lo `test -f 'effects/smuck.c' || echo '$(srcdir)/'`effects/smuck.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/smuck.Tpo" "$(DEPDIR)/smuck.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/smuck.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/smuck.c' object='smuck.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/smuck.Plo' tmpdepfile='$(DEPDIR)/smuck.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smuck.lo `test -f 'effects/smuck.c' || echo '$(srcdir)/'`effects/smuck.c

transform.o: effects/transform.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform.o -MD -MP -MF "$(DEPDIR)/transform.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transform.o `test -f 'effects/transform.c' || echo '$(srcdir)/'`effects/transform.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transform.Tpo" "$(DEPDIR)/transform.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transform.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/transform.c' object='transform.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transform.Po' tmpdepfile='$(DEPDIR)/transform.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform.o `test -f 'effects/transform.c' || echo '$(srcdir)/'`effects/transform.c

transform.obj: effects/transform.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform.obj -MD -MP -MF "$(DEPDIR)/transform.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transform.obj `if test -f 'effects/transform.c'; then $(CYGPATH_W) 'effects/transform.c'; else $(CYGPATH_W) '$(srcdir)/effects/transform.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transform.Tpo" "$(DEPDIR)/transform.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transform.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/transform.c' object='transform.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transform.Po' tmpdepfile='$(DEPDIR)/transform.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform.obj `if test -f 'effects/transform.c'; then $(CYGPATH_W) 'effects/transform.c'; else $(CYGPATH_W) '$(srcdir)/effects/transform.c'; fi`

transform.lo: effects/transform.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform.lo -MD -MP -MF "$(DEPDIR)/transform.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transform.lo `test -f 'effects/transform.c' || echo '$(srcdir)/'`effects/transform.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transform.Tpo" "$(DEPDIR)/transform.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transform.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/transform.c' object='transform.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transform.Plo' tmpdepfile='$(DEPDIR)/transform.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform.lo `test -f 'effects/transform.c' || echo '$(srcdir)/'`effects/transform.c

borders.o: effects/borders.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT borders.o -MD -MP -MF "$(DEPDIR)/borders.Tpo" \
@am__fastdepCC_TRUE@	  -c -o borders.o `test -f 'effects/borders.c' || echo '$(srcdir)/'`effects/borders.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/borders.Tpo" "$(DEPDIR)/borders.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/borders.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/borders.c' object='borders.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/borders.Po' tmpdepfile='$(DEPDIR)/borders.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o borders.o `test -f 'effects/borders.c' || echo '$(srcdir)/'`effects/borders.c

borders.obj: effects/borders.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT borders.obj -MD -MP -MF "$(DEPDIR)/borders.Tpo" \
@am__fastdepCC_TRUE@	  -c -o borders.obj `if test -f 'effects/borders.c'; then $(CYGPATH_W) 'effects/borders.c'; else $(CYGPATH_W) '$(srcdir)/effects/borders.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/borders.Tpo" "$(DEPDIR)/borders.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/borders.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/borders.c' object='borders.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/borders.Po' tmpdepfile='$(DEPDIR)/borders.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o borders.obj `if test -f 'effects/borders.c'; then $(CYGPATH_W) 'effects/borders.c'; else $(CYGPATH_W) '$(srcdir)/effects/borders.c'; fi`

borders.lo: effects/borders.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT borders.lo -MD -MP -MF "$(DEPDIR)/borders.Tpo" \
@am__fastdepCC_TRUE@	  -c -o borders.lo `test -f 'effects/borders.c' || echo '$(srcdir)/'`effects/borders.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/borders.Tpo" "$(DEPDIR)/borders.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/borders.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/borders.c' object='borders.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/borders.Plo' tmpdepfile='$(DEPDIR)/borders.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o borders.lo `test -f 'effects/borders.c' || echo '$(srcdir)/'`effects/borders.c

rgbkey.o: effects/rgbkey.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rgbkey.o -MD -MP -MF "$(DEPDIR)/rgbkey.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rgbkey.o `test -f 'effects/rgbkey.c' || echo '$(srcdir)/'`effects/rgbkey.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rgbkey.Tpo" "$(DEPDIR)/rgbkey.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rgbkey.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rgbkey.c' object='rgbkey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rgbkey.Po' tmpdepfile='$(DEPDIR)/rgbkey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rgbkey.o `test -f 'effects/rgbkey.c' || echo '$(srcdir)/'`effects/rgbkey.c

rgbkey.obj: effects/rgbkey.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rgbkey.obj -MD -MP -MF "$(DEPDIR)/rgbkey.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rgbkey.obj `if test -f 'effects/rgbkey.c'; then $(CYGPATH_W) 'effects/rgbkey.c'; else $(CYGPATH_W) '$(srcdir)/effects/rgbkey.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rgbkey.Tpo" "$(DEPDIR)/rgbkey.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rgbkey.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rgbkey.c' object='rgbkey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rgbkey.Po' tmpdepfile='$(DEPDIR)/rgbkey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rgbkey.obj `if test -f 'effects/rgbkey.c'; then $(CYGPATH_W) 'effects/rgbkey.c'; else $(CYGPATH_W) '$(srcdir)/effects/rgbkey.c'; fi`

rgbkey.lo: effects/rgbkey.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rgbkey.lo -MD -MP -MF "$(DEPDIR)/rgbkey.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rgbkey.lo `test -f 'effects/rgbkey.c' || echo '$(srcdir)/'`effects/rgbkey.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rgbkey.Tpo" "$(DEPDIR)/rgbkey.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rgbkey.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rgbkey.c' object='rgbkey.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rgbkey.Plo' tmpdepfile='$(DEPDIR)/rgbkey.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rgbkey.lo `test -f 'effects/rgbkey.c' || echo '$(srcdir)/'`effects/rgbkey.c

solarize.o: effects/solarize.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solarize.o -MD -MP -MF "$(DEPDIR)/solarize.Tpo" \
@am__fastdepCC_TRUE@	  -c -o solarize.o `test -f 'effects/solarize.c' || echo '$(srcdir)/'`effects/solarize.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/solarize.Tpo" "$(DEPDIR)/solarize.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/solarize.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/solarize.c' object='solarize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/solarize.Po' tmpdepfile='$(DEPDIR)/solarize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solarize.o `test -f 'effects/solarize.c' || echo '$(srcdir)/'`effects/solarize.c

solarize.obj: effects/solarize.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solarize.obj -MD -MP -MF "$(DEPDIR)/solarize.Tpo" \
@am__fastdepCC_TRUE@	  -c -o solarize.obj `if test -f 'effects/solarize.c'; then $(CYGPATH_W) 'effects/solarize.c'; else $(CYGPATH_W) '$(srcdir)/effects/solarize.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/solarize.Tpo" "$(DEPDIR)/solarize.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/solarize.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/solarize.c' object='solarize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/solarize.Po' tmpdepfile='$(DEPDIR)/solarize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solarize.obj `if test -f 'effects/solarize.c'; then $(CYGPATH_W) 'effects/solarize.c'; else $(CYGPATH_W) '$(srcdir)/effects/solarize.c'; fi`

solarize.lo: effects/solarize.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solarize.lo -MD -MP -MF "$(DEPDIR)/solarize.Tpo" \
@am__fastdepCC_TRUE@	  -c -o solarize.lo `test -f 'effects/solarize.c' || echo '$(srcdir)/'`effects/solarize.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/solarize.Tpo" "$(DEPDIR)/solarize.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/solarize.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/solarize.c' object='solarize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/solarize.Plo' tmpdepfile='$(DEPDIR)/solarize.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solarize.lo `test -f 'effects/solarize.c' || echo '$(srcdir)/'`effects/solarize.c

mirrors2.o: effects/mirrors2.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mirrors2.o -MD -MP -MF "$(DEPDIR)/mirrors2.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mirrors2.o `test -f 'effects/mirrors2.c' || echo '$(srcdir)/'`effects/mirrors2.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mirrors2.Tpo" "$(DEPDIR)/mirrors2.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mirrors2.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mirrors2.c' object='mirrors2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mirrors2.Po' tmpdepfile='$(DEPDIR)/mirrors2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mirrors2.o `test -f 'effects/mirrors2.c' || echo '$(srcdir)/'`effects/mirrors2.c

mirrors2.obj: effects/mirrors2.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mirrors2.obj -MD -MP -MF "$(DEPDIR)/mirrors2.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mirrors2.obj `if test -f 'effects/mirrors2.c'; then $(CYGPATH_W) 'effects/mirrors2.c'; else $(CYGPATH_W) '$(srcdir)/effects/mirrors2.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mirrors2.Tpo" "$(DEPDIR)/mirrors2.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mirrors2.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mirrors2.c' object='mirrors2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mirrors2.Po' tmpdepfile='$(DEPDIR)/mirrors2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mirrors2.obj `if test -f 'effects/mirrors2.c'; then $(CYGPATH_W) 'effects/mirrors2.c'; else $(CYGPATH_W) '$(srcdir)/effects/mirrors2.c'; fi`

mirrors2.lo: effects/mirrors2.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mirrors2.lo -MD -MP -MF "$(DEPDIR)/mirrors2.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mirrors2.lo `test -f 'effects/mirrors2.c' || echo '$(srcdir)/'`effects/mirrors2.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mirrors2.Tpo" "$(DEPDIR)/mirrors2.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mirrors2.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mirrors2.c' object='mirrors2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mirrors2.Plo' tmpdepfile='$(DEPDIR)/mirrors2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mirrors2.lo `test -f 'effects/mirrors2.c' || echo '$(srcdir)/'`effects/mirrors2.c

whiteframe.o: effects/whiteframe.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT whiteframe.o -MD -MP -MF "$(DEPDIR)/whiteframe.Tpo" \
@am__fastdepCC_TRUE@	  -c -o whiteframe.o `test -f 'effects/whiteframe.c' || echo '$(srcdir)/'`effects/whiteframe.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/whiteframe.Tpo" "$(DEPDIR)/whiteframe.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/whiteframe.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/whiteframe.c' object='whiteframe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/whiteframe.Po' tmpdepfile='$(DEPDIR)/whiteframe.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o whiteframe.o `test -f 'effects/whiteframe.c' || echo '$(srcdir)/'`effects/whiteframe.c

whiteframe.obj: effects/whiteframe.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT whiteframe.obj -MD -MP -MF "$(DEPDIR)/whiteframe.Tpo" \
@am__fastdepCC_TRUE@	  -c -o whiteframe.obj `if test -f 'effects/whiteframe.c'; then $(CYGPATH_W) 'effects/whiteframe.c'; else $(CYGPATH_W) '$(srcdir)/effects/whiteframe.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/whiteframe.Tpo" "$(DEPDIR)/whiteframe.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/whiteframe.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/whiteframe.c' object='whiteframe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/whiteframe.Po' tmpdepfile='$(DEPDIR)/whiteframe.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o whiteframe.obj `if test -f 'effects/whiteframe.c'; then $(CYGPATH_W) 'effects/whiteframe.c'; else $(CYGPATH_W) '$(srcdir)/effects/whiteframe.c'; fi`

whiteframe.lo: effects/whiteframe.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT whiteframe.lo -MD -MP -MF "$(DEPDIR)/whiteframe.Tpo" \
@am__fastdepCC_TRUE@	  -c -o whiteframe.lo `test -f 'effects/whiteframe.c' || echo '$(srcdir)/'`effects/whiteframe.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/whiteframe.Tpo" "$(DEPDIR)/whiteframe.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/whiteframe.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/whiteframe.c' object='whiteframe.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/whiteframe.Plo' tmpdepfile='$(DEPDIR)/whiteframe.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o whiteframe.lo `test -f 'effects/whiteframe.c' || echo '$(srcdir)/'`effects/whiteframe.c

deinterlace.o: effects/deinterlace.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deinterlace.o -MD -MP -MF "$(DEPDIR)/deinterlace.Tpo" \
@am__fastdepCC_TRUE@	  -c -o deinterlace.o `test -f 'effects/deinterlace.c' || echo '$(srcdir)/'`effects/deinterlace.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/deinterlace.Tpo" "$(DEPDIR)/deinterlace.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/deinterlace.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/deinterlace.c' object='deinterlace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/deinterlace.Po' tmpdepfile='$(DEPDIR)/deinterlace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deinterlace.o `test -f 'effects/deinterlace.c' || echo '$(srcdir)/'`effects/deinterlace.c

deinterlace.obj: effects/deinterlace.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deinterlace.obj -MD -MP -MF "$(DEPDIR)/deinterlace.Tpo" \
@am__fastdepCC_TRUE@	  -c -o deinterlace.obj `if test -f 'effects/deinterlace.c'; then $(CYGPATH_W) 'effects/deinterlace.c'; else $(CYGPATH_W) '$(srcdir)/effects/deinterlace.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/deinterlace.Tpo" "$(DEPDIR)/deinterlace.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/deinterlace.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/deinterlace.c' object='deinterlace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/deinterlace.Po' tmpdepfile='$(DEPDIR)/deinterlace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deinterlace.obj `if test -f 'effects/deinterlace.c'; then $(CYGPATH_W) 'effects/deinterlace.c'; else $(CYGPATH_W) '$(srcdir)/effects/deinterlace.c'; fi`

deinterlace.lo: effects/deinterlace.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deinterlace.lo -MD -MP -MF "$(DEPDIR)/deinterlace.Tpo" \
@am__fastdepCC_TRUE@	  -c -o deinterlace.lo `test -f 'effects/deinterlace.c' || echo '$(srcdir)/'`effects/deinterlace.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/deinterlace.Tpo" "$(DEPDIR)/deinterlace.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/deinterlace.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/deinterlace.c' object='deinterlace.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/deinterlace.Plo' tmpdepfile='$(DEPDIR)/deinterlace.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deinterlace.lo `test -f 'effects/deinterlace.c' || echo '$(srcdir)/'`effects/deinterlace.c

lumakey.o: effects/lumakey.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumakey.o -MD -MP -MF "$(DEPDIR)/lumakey.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumakey.o `test -f 'effects/lumakey.c' || echo '$(srcdir)/'`effects/lumakey.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumakey.Tpo" "$(DEPDIR)/lumakey.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumakey.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumakey.c' object='lumakey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumakey.Po' tmpdepfile='$(DEPDIR)/lumakey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumakey.o `test -f 'effects/lumakey.c' || echo '$(srcdir)/'`effects/lumakey.c

lumakey.obj: effects/lumakey.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumakey.obj -MD -MP -MF "$(DEPDIR)/lumakey.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumakey.obj `if test -f 'effects/lumakey.c'; then $(CYGPATH_W) 'effects/lumakey.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumakey.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumakey.Tpo" "$(DEPDIR)/lumakey.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumakey.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumakey.c' object='lumakey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumakey.Po' tmpdepfile='$(DEPDIR)/lumakey.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumakey.obj `if test -f 'effects/lumakey.c'; then $(CYGPATH_W) 'effects/lumakey.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumakey.c'; fi`

lumakey.lo: effects/lumakey.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumakey.lo -MD -MP -MF "$(DEPDIR)/lumakey.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumakey.lo `test -f 'effects/lumakey.c' || echo '$(srcdir)/'`effects/lumakey.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumakey.Tpo" "$(DEPDIR)/lumakey.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumakey.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumakey.c' object='lumakey.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumakey.Plo' tmpdepfile='$(DEPDIR)/lumakey.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumakey.lo `test -f 'effects/lumakey.c' || echo '$(srcdir)/'`effects/lumakey.c

coloradjust.o: effects/coloradjust.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coloradjust.o -MD -MP -MF "$(DEPDIR)/coloradjust.Tpo" \
@am__fastdepCC_TRUE@	  -c -o coloradjust.o `test -f 'effects/coloradjust.c' || echo '$(srcdir)/'`effects/coloradjust.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/coloradjust.Tpo" "$(DEPDIR)/coloradjust.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/coloradjust.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/coloradjust.c' object='coloradjust.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/coloradjust.Po' tmpdepfile='$(DEPDIR)/coloradjust.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coloradjust.o `test -f 'effects/coloradjust.c' || echo '$(srcdir)/'`effects/coloradjust.c

coloradjust.obj: effects/coloradjust.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coloradjust.obj -MD -MP -MF "$(DEPDIR)/coloradjust.Tpo" \
@am__fastdepCC_TRUE@	  -c -o coloradjust.obj `if test -f 'effects/coloradjust.c'; then $(CYGPATH_W) 'effects/coloradjust.c'; else $(CYGPATH_W) '$(srcdir)/effects/coloradjust.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/coloradjust.Tpo" "$(DEPDIR)/coloradjust.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/coloradjust.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/coloradjust.c' object='coloradjust.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/coloradjust.Po' tmpdepfile='$(DEPDIR)/coloradjust.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coloradjust.obj `if test -f 'effects/coloradjust.c'; then $(CYGPATH_W) 'effects/coloradjust.c'; else $(CYGPATH_W) '$(srcdir)/effects/coloradjust.c'; fi`

coloradjust.lo: effects/coloradjust.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coloradjust.lo -MD -MP -MF "$(DEPDIR)/coloradjust.Tpo" \
@am__fastdepCC_TRUE@	  -c -o coloradjust.lo `test -f 'effects/coloradjust.c' || echo '$(srcdir)/'`effects/coloradjust.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/coloradjust.Tpo" "$(DEPDIR)/coloradjust.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/coloradjust.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/coloradjust.c' object='coloradjust.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/coloradjust.Plo' tmpdepfile='$(DEPDIR)/coloradjust.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coloradjust.lo `test -f 'effects/coloradjust.c' || echo '$(srcdir)/'`effects/coloradjust.c

gamma.o: effects/gamma.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gamma.o -MD -MP -MF "$(DEPDIR)/gamma.Tpo" \
@am__fastdepCC_TRUE@	  -c -o gamma.o `test -f 'effects/gamma.c' || echo '$(srcdir)/'`effects/gamma.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/gamma.Tpo" "$(DEPDIR)/gamma.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/gamma.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/gamma.c' object='gamma.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/gamma.Po' tmpdepfile='$(DEPDIR)/gamma.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gamma.o `test -f 'effects/gamma.c' || echo '$(srcdir)/'`effects/gamma.c

gamma.obj: effects/gamma.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gamma.obj -MD -MP -MF "$(DEPDIR)/gamma.Tpo" \
@am__fastdepCC_TRUE@	  -c -o gamma.obj `if test -f 'effects/gamma.c'; then $(CYGPATH_W) 'effects/gamma.c'; else $(CYGPATH_W) '$(srcdir)/effects/gamma.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/gamma.Tpo" "$(DEPDIR)/gamma.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/gamma.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/gamma.c' object='gamma.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/gamma.Po' tmpdepfile='$(DEPDIR)/gamma.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gamma.obj `if test -f 'effects/gamma.c'; then $(CYGPATH_W) 'effects/gamma.c'; else $(CYGPATH_W) '$(srcdir)/effects/gamma.c'; fi`

gamma.lo: effects/gamma.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gamma.lo -MD -MP -MF "$(DEPDIR)/gamma.Tpo" \
@am__fastdepCC_TRUE@	  -c -o gamma.lo `test -f 'effects/gamma.c' || echo '$(srcdir)/'`effects/gamma.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/gamma.Tpo" "$(DEPDIR)/gamma.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/gamma.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/gamma.c' object='gamma.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/gamma.Plo' tmpdepfile='$(DEPDIR)/gamma.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gamma.lo `test -f 'effects/gamma.c' || echo '$(srcdir)/'`effects/gamma.c

reflection.o: effects/reflection.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reflection.o -MD -MP -MF "$(DEPDIR)/reflection.Tpo" \
@am__fastdepCC_TRUE@	  -c -o reflection.o `test -f 'effects/reflection.c' || echo '$(srcdir)/'`effects/reflection.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/reflection.Tpo" "$(DEPDIR)/reflection.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/reflection.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/reflection.c' object='reflection.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/reflection.Po' tmpdepfile='$(DEPDIR)/reflection.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reflection.o `test -f 'effects/reflection.c' || echo '$(srcdir)/'`effects/reflection.c

reflection.obj: effects/reflection.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reflection.obj -MD -MP -MF "$(DEPDIR)/reflection.Tpo" \
@am__fastdepCC_TRUE@	  -c -o reflection.obj `if test -f 'effects/reflection.c'; then $(CYGPATH_W) 'effects/reflection.c'; else $(CYGPATH_W) '$(srcdir)/effects/reflection.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/reflection.Tpo" "$(DEPDIR)/reflection.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/reflection.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/reflection.c' object='reflection.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/reflection.Po' tmpdepfile='$(DEPDIR)/reflection.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reflection.obj `if test -f 'effects/reflection.c'; then $(CYGPATH_W) 'effects/reflection.c'; else $(CYGPATH_W) '$(srcdir)/effects/reflection.c'; fi`

reflection.lo: effects/reflection.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reflection.lo -MD -MP -MF "$(DEPDIR)/reflection.Tpo" \
@am__fastdepCC_TRUE@	  -c -o reflection.lo `test -f 'effects/reflection.c' || echo '$(srcdir)/'`effects/reflection.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/reflection.Tpo" "$(DEPDIR)/reflection.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/reflection.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/reflection.c' object='reflection.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/reflection.Plo' tmpdepfile='$(DEPDIR)/reflection.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reflection.lo `test -f 'effects/reflection.c' || echo '$(srcdir)/'`effects/reflection.c

rotozoom.o: effects/rotozoom.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rotozoom.o -MD -MP -MF "$(DEPDIR)/rotozoom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rotozoom.o `test -f 'effects/rotozoom.c' || echo '$(srcdir)/'`effects/rotozoom.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rotozoom.Tpo" "$(DEPDIR)/rotozoom.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rotozoom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rotozoom.c' object='rotozoom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rotozoom.Po' tmpdepfile='$(DEPDIR)/rotozoom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rotozoom.o `test -f 'effects/rotozoom.c' || echo '$(srcdir)/'`effects/rotozoom.c

rotozoom.obj: effects/rotozoom.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rotozoom.obj -MD -MP -MF "$(DEPDIR)/rotozoom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rotozoom.obj `if test -f 'effects/rotozoom.c'; then $(CYGPATH_W) 'effects/rotozoom.c'; else $(CYGPATH_W) '$(srcdir)/effects/rotozoom.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rotozoom.Tpo" "$(DEPDIR)/rotozoom.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rotozoom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rotozoom.c' object='rotozoom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rotozoom.Po' tmpdepfile='$(DEPDIR)/rotozoom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rotozoom.obj `if test -f 'effects/rotozoom.c'; then $(CYGPATH_W) 'effects/rotozoom.c'; else $(CYGPATH_W) '$(srcdir)/effects/rotozoom.c'; fi`

rotozoom.lo: effects/rotozoom.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rotozoom.lo -MD -MP -MF "$(DEPDIR)/rotozoom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rotozoom.lo `test -f 'effects/rotozoom.c' || echo '$(srcdir)/'`effects/rotozoom.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rotozoom.Tpo" "$(DEPDIR)/rotozoom.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rotozoom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rotozoom.c' object='rotozoom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rotozoom.Plo' tmpdepfile='$(DEPDIR)/rotozoom.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rotozoom.lo `test -f 'effects/rotozoom.c' || echo '$(srcdir)/'`effects/rotozoom.c

transblend.o: transitions/transblend.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transblend.o -MD -MP -MF "$(DEPDIR)/transblend.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transblend.o `test -f 'transitions/transblend.c' || echo '$(srcdir)/'`transitions/transblend.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transblend.Tpo" "$(DEPDIR)/transblend.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transblend.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transblend.c' object='transblend.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transblend.Po' tmpdepfile='$(DEPDIR)/transblend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transblend.o `test -f 'transitions/transblend.c' || echo '$(srcdir)/'`transitions/transblend.c

transblend.obj: transitions/transblend.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transblend.obj -MD -MP -MF "$(DEPDIR)/transblend.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transblend.obj `if test -f 'transitions/transblend.c'; then $(CYGPATH_W) 'transitions/transblend.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transblend.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transblend.Tpo" "$(DEPDIR)/transblend.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transblend.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transblend.c' object='transblend.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transblend.Po' tmpdepfile='$(DEPDIR)/transblend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transblend.obj `if test -f 'transitions/transblend.c'; then $(CYGPATH_W) 'transitions/transblend.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transblend.c'; fi`

transblend.lo: transitions/transblend.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transblend.lo -MD -MP -MF "$(DEPDIR)/transblend.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transblend.lo `test -f 'transitions/transblend.c' || echo '$(srcdir)/'`transitions/transblend.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transblend.Tpo" "$(DEPDIR)/transblend.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transblend.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transblend.c' object='transblend.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transblend.Plo' tmpdepfile='$(DEPDIR)/transblend.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transblend.lo `test -f 'transitions/transblend.c' || echo '$(srcdir)/'`transitions/transblend.c

slidingdoor.o: transitions/slidingdoor.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slidingdoor.o -MD -MP -MF "$(DEPDIR)/slidingdoor.Tpo" \
@am__fastdepCC_TRUE@	  -c -o slidingdoor.o `test -f 'transitions/slidingdoor.c' || echo '$(srcdir)/'`transitions/slidingdoor.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/slidingdoor.Tpo" "$(DEPDIR)/slidingdoor.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/slidingdoor.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/slidingdoor.c' object='slidingdoor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/slidingdoor.Po' tmpdepfile='$(DEPDIR)/slidingdoor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slidingdoor.o `test -f 'transitions/slidingdoor.c' || echo '$(srcdir)/'`transitions/slidingdoor.c

slidingdoor.obj: transitions/slidingdoor.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slidingdoor.obj -MD -MP -MF "$(DEPDIR)/slidingdoor.Tpo" \
@am__fastdepCC_TRUE@	  -c -o slidingdoor.obj `if test -f 'transitions/slidingdoor.c'; then $(CYGPATH_W) 'transitions/slidingdoor.c'; else $(CYGPATH_W) '$(srcdir)/transitions/slidingdoor.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/slidingdoor.Tpo" "$(DEPDIR)/slidingdoor.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/slidingdoor.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/slidingdoor.c' object='slidingdoor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/slidingdoor.Po' tmpdepfile='$(DEPDIR)/slidingdoor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slidingdoor.obj `if test -f 'transitions/slidingdoor.c'; then $(CYGPATH_W) 'transitions/slidingdoor.c'; else $(CYGPATH_W) '$(srcdir)/transitions/slidingdoor.c'; fi`

slidingdoor.lo: transitions/slidingdoor.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slidingdoor.lo -MD -MP -MF "$(DEPDIR)/slidingdoor.Tpo" \
@am__fastdepCC_TRUE@	  -c -o slidingdoor.lo `test -f 'transitions/slidingdoor.c' || echo '$(srcdir)/'`transitions/slidingdoor.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/slidingdoor.Tpo" "$(DEPDIR)/slidingdoor.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/slidingdoor.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/slidingdoor.c' object='slidingdoor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/slidingdoor.Plo' tmpdepfile='$(DEPDIR)/slidingdoor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slidingdoor.lo `test -f 'transitions/slidingdoor.c' || echo '$(srcdir)/'`transitions/slidingdoor.c

color.o: effects/color.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT color.o -MD -MP -MF "$(DEPDIR)/color.Tpo" \
@am__fastdepCC_TRUE@	  -c -o color.o `test -f 'effects/color.c' || echo '$(srcdir)/'`effects/color.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/color.Tpo" "$(DEPDIR)/color.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/color.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/color.c' object='color.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/color.Po' tmpdepfile='$(DEPDIR)/color.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o color.o `test -f 'effects/color.c' || echo '$(srcdir)/'`effects/color.c

color.obj: effects/color.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT color.obj -MD -MP -MF "$(DEPDIR)/color.Tpo" \
@am__fastdepCC_TRUE@	  -c -o color.obj `if test -f 'effects/color.c'; then $(CYGPATH_W) 'effects/color.c'; else $(CYGPATH_W) '$(srcdir)/effects/color.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/color.Tpo" "$(DEPDIR)/color.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/color.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/color.c' object='color.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/color.Po' tmpdepfile='$(DEPDIR)/color.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o color.obj `if test -f 'effects/color.c'; then $(CYGPATH_W) 'effects/color.c'; else $(CYGPATH_W) '$(srcdir)/effects/color.c'; fi`

color.lo: effects/color.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT color.lo -MD -MP -MF "$(DEPDIR)/color.Tpo" \
@am__fastdepCC_TRUE@	  -c -o color.lo `test -f 'effects/color.c' || echo '$(srcdir)/'`effects/color.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/color.Tpo" "$(DEPDIR)/color.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/color.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/color.c' object='color.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/color.Plo' tmpdepfile='$(DEPDIR)/color.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o color.lo `test -f 'effects/color.c' || echo '$(srcdir)/'`effects/color.c

transline.o: transitions/transline.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transline.o -MD -MP -MF "$(DEPDIR)/transline.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transline.o `test -f 'transitions/transline.c' || echo '$(srcdir)/'`transitions/transline.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transline.Tpo" "$(DEPDIR)/transline.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transline.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transline.c' object='transline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transline.Po' tmpdepfile='$(DEPDIR)/transline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transline.o `test -f 'transitions/transline.c' || echo '$(srcdir)/'`transitions/transline.c

transline.obj: transitions/transline.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transline.obj -MD -MP -MF "$(DEPDIR)/transline.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transline.obj `if test -f 'transitions/transline.c'; then $(CYGPATH_W) 'transitions/transline.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transline.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transline.Tpo" "$(DEPDIR)/transline.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transline.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transline.c' object='transline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transline.Po' tmpdepfile='$(DEPDIR)/transline.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transline.obj `if test -f 'transitions/transline.c'; then $(CYGPATH_W) 'transitions/transline.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transline.c'; fi`

transline.lo: transitions/transline.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transline.lo -MD -MP -MF "$(DEPDIR)/transline.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transline.lo `test -f 'transitions/transline.c' || echo '$(srcdir)/'`transitions/transline.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transline.Tpo" "$(DEPDIR)/transline.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transline.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transline.c' object='transline.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transline.Plo' tmpdepfile='$(DEPDIR)/transline.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transline.lo `test -f 'transitions/transline.c' || echo '$(srcdir)/'`transitions/transline.c

transop.o: transitions/transop.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transop.o -MD -MP -MF "$(DEPDIR)/transop.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transop.o `test -f 'transitions/transop.c' || echo '$(srcdir)/'`transitions/transop.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transop.Tpo" "$(DEPDIR)/transop.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transop.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transop.c' object='transop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transop.Po' tmpdepfile='$(DEPDIR)/transop.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transop.o `test -f 'transitions/transop.c' || echo '$(srcdir)/'`transitions/transop.c

transop.obj: transitions/transop.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transop.obj -MD -MP -MF "$(DEPDIR)/transop.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transop.obj `if test -f 'transitions/transop.c'; then $(CYGPATH_W) 'transitions/transop.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transop.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transop.Tpo" "$(DEPDIR)/transop.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transop.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transop.c' object='transop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transop.Po' tmpdepfile='$(DEPDIR)/transop.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transop.obj `if test -f 'transitions/transop.c'; then $(CYGPATH_W) 'transitions/transop.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transop.c'; fi`

transop.lo: transitions/transop.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transop.lo -MD -MP -MF "$(DEPDIR)/transop.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transop.lo `test -f 'transitions/transop.c' || echo '$(srcdir)/'`transitions/transop.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transop.Tpo" "$(DEPDIR)/transop.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transop.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transop.c' object='transop.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transop.Plo' tmpdepfile='$(DEPDIR)/transop.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transop.lo `test -f 'transitions/transop.c' || echo '$(srcdir)/'`transitions/transop.c

transcarot.o: transitions/transcarot.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transcarot.o -MD -MP -MF "$(DEPDIR)/transcarot.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transcarot.o `test -f 'transitions/transcarot.c' || echo '$(srcdir)/'`transitions/transcarot.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transcarot.Tpo" "$(DEPDIR)/transcarot.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transcarot.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transcarot.c' object='transcarot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transcarot.Po' tmpdepfile='$(DEPDIR)/transcarot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transcarot.o `test -f 'transitions/transcarot.c' || echo '$(srcdir)/'`transitions/transcarot.c

transcarot.obj: transitions/transcarot.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transcarot.obj -MD -MP -MF "$(DEPDIR)/transcarot.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transcarot.obj `if test -f 'transitions/transcarot.c'; then $(CYGPATH_W) 'transitions/transcarot.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transcarot.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transcarot.Tpo" "$(DEPDIR)/transcarot.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transcarot.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transcarot.c' object='transcarot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transcarot.Po' tmpdepfile='$(DEPDIR)/transcarot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transcarot.obj `if test -f 'transitions/transcarot.c'; then $(CYGPATH_W) 'transitions/transcarot.c'; else $(CYGPATH_W) '$(srcdir)/transitions/transcarot.c'; fi`

transcarot.lo: transitions/transcarot.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transcarot.lo -MD -MP -MF "$(DEPDIR)/transcarot.Tpo" \
@am__fastdepCC_TRUE@	  -c -o transcarot.lo `test -f 'transitions/transcarot.c' || echo '$(srcdir)/'`transitions/transcarot.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/transcarot.Tpo" "$(DEPDIR)/transcarot.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/transcarot.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/transcarot.c' object='transcarot.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/transcarot.Plo' tmpdepfile='$(DEPDIR)/transcarot.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transcarot.lo `test -f 'transitions/transcarot.c' || echo '$(srcdir)/'`transitions/transcarot.c

fadecolor.o: transitions/fadecolor.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fadecolor.o -MD -MP -MF "$(DEPDIR)/fadecolor.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fadecolor.o `test -f 'transitions/fadecolor.c' || echo '$(srcdir)/'`transitions/fadecolor.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fadecolor.Tpo" "$(DEPDIR)/fadecolor.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fadecolor.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/fadecolor.c' object='fadecolor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fadecolor.Po' tmpdepfile='$(DEPDIR)/fadecolor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fadecolor.o `test -f 'transitions/fadecolor.c' || echo '$(srcdir)/'`transitions/fadecolor.c

fadecolor.obj: transitions/fadecolor.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fadecolor.obj -MD -MP -MF "$(DEPDIR)/fadecolor.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fadecolor.obj `if test -f 'transitions/fadecolor.c'; then $(CYGPATH_W) 'transitions/fadecolor.c'; else $(CYGPATH_W) '$(srcdir)/transitions/fadecolor.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fadecolor.Tpo" "$(DEPDIR)/fadecolor.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fadecolor.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/fadecolor.c' object='fadecolor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fadecolor.Po' tmpdepfile='$(DEPDIR)/fadecolor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fadecolor.obj `if test -f 'transitions/fadecolor.c'; then $(CYGPATH_W) 'transitions/fadecolor.c'; else $(CYGPATH_W) '$(srcdir)/transitions/fadecolor.c'; fi`

fadecolor.lo: transitions/fadecolor.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fadecolor.lo -MD -MP -MF "$(DEPDIR)/fadecolor.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fadecolor.lo `test -f 'transitions/fadecolor.c' || echo '$(srcdir)/'`transitions/fadecolor.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fadecolor.Tpo" "$(DEPDIR)/fadecolor.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fadecolor.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/fadecolor.c' object='fadecolor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fadecolor.Plo' tmpdepfile='$(DEPDIR)/fadecolor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fadecolor.lo `test -f 'transitions/fadecolor.c' || echo '$(srcdir)/'`transitions/fadecolor.c

lumablend.o: effects/lumablend.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumablend.o -MD -MP -MF "$(DEPDIR)/lumablend.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumablend.o `test -f 'effects/lumablend.c' || echo '$(srcdir)/'`effects/lumablend.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumablend.Tpo" "$(DEPDIR)/lumablend.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumablend.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumablend.c' object='lumablend.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumablend.Po' tmpdepfile='$(DEPDIR)/lumablend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumablend.o `test -f 'effects/lumablend.c' || echo '$(srcdir)/'`effects/lumablend.c

lumablend.obj: effects/lumablend.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumablend.obj -MD -MP -MF "$(DEPDIR)/lumablend.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumablend.obj `if test -f 'effects/lumablend.c'; then $(CYGPATH_W) 'effects/lumablend.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumablend.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumablend.Tpo" "$(DEPDIR)/lumablend.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumablend.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumablend.c' object='lumablend.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumablend.Po' tmpdepfile='$(DEPDIR)/lumablend.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumablend.obj `if test -f 'effects/lumablend.c'; then $(CYGPATH_W) 'effects/lumablend.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumablend.c'; fi`

lumablend.lo: effects/lumablend.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumablend.lo -MD -MP -MF "$(DEPDIR)/lumablend.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumablend.lo `test -f 'effects/lumablend.c' || echo '$(srcdir)/'`effects/lumablend.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumablend.Tpo" "$(DEPDIR)/lumablend.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumablend.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumablend.c' object='lumablend.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumablend.Plo' tmpdepfile='$(DEPDIR)/lumablend.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumablend.lo `test -f 'effects/lumablend.c' || echo '$(srcdir)/'`effects/lumablend.c

chromamagick.o: effects/chromamagick.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromamagick.o -MD -MP -MF "$(DEPDIR)/chromamagick.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromamagick.o `test -f 'effects/chromamagick.c' || echo '$(srcdir)/'`effects/chromamagick.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromamagick.Tpo" "$(DEPDIR)/chromamagick.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromamagick.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromamagick.c' object='chromamagick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromamagick.Po' tmpdepfile='$(DEPDIR)/chromamagick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromamagick.o `test -f 'effects/chromamagick.c' || echo '$(srcdir)/'`effects/chromamagick.c

chromamagick.obj: effects/chromamagick.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromamagick.obj -MD -MP -MF "$(DEPDIR)/chromamagick.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromamagick.obj `if test -f 'effects/chromamagick.c'; then $(CYGPATH_W) 'effects/chromamagick.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromamagick.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromamagick.Tpo" "$(DEPDIR)/chromamagick.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromamagick.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromamagick.c' object='chromamagick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromamagick.Po' tmpdepfile='$(DEPDIR)/chromamagick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromamagick.obj `if test -f 'effects/chromamagick.c'; then $(CYGPATH_W) 'effects/chromamagick.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromamagick.c'; fi`

chromamagick.lo: effects/chromamagick.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromamagick.lo -MD -MP -MF "$(DEPDIR)/chromamagick.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromamagick.lo `test -f 'effects/chromamagick.c' || echo '$(srcdir)/'`effects/chromamagick.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromamagick.Tpo" "$(DEPDIR)/chromamagick.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromamagick.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromamagick.c' object='chromamagick.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromamagick.Plo' tmpdepfile='$(DEPDIR)/chromamagick.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromamagick.lo `test -f 'effects/chromamagick.c' || echo '$(srcdir)/'`effects/chromamagick.c

fadecolorrgb.o: transitions/fadecolorrgb.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fadecolorrgb.o -MD -MP -MF "$(DEPDIR)/fadecolorrgb.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fadecolorrgb.o `test -f 'transitions/fadecolorrgb.c' || echo '$(srcdir)/'`transitions/fadecolorrgb.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fadecolorrgb.Tpo" "$(DEPDIR)/fadecolorrgb.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fadecolorrgb.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/fadecolorrgb.c' object='fadecolorrgb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fadecolorrgb.Po' tmpdepfile='$(DEPDIR)/fadecolorrgb.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fadecolorrgb.o `test -f 'transitions/fadecolorrgb.c' || echo '$(srcdir)/'`transitions/fadecolorrgb.c

fadecolorrgb.obj: transitions/fadecolorrgb.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fadecolorrgb.obj -MD -MP -MF "$(DEPDIR)/fadecolorrgb.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fadecolorrgb.obj `if test -f 'transitions/fadecolorrgb.c'; then $(CYGPATH_W) 'transitions/fadecolorrgb.c'; else $(CYGPATH_W) '$(srcdir)/transitions/fadecolorrgb.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fadecolorrgb.Tpo" "$(DEPDIR)/fadecolorrgb.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fadecolorrgb.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/fadecolorrgb.c' object='fadecolorrgb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fadecolorrgb.Po' tmpdepfile='$(DEPDIR)/fadecolorrgb.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fadecolorrgb.obj `if test -f 'transitions/fadecolorrgb.c'; then $(CYGPATH_W) 'transitions/fadecolorrgb.c'; else $(CYGPATH_W) '$(srcdir)/transitions/fadecolorrgb.c'; fi`

fadecolorrgb.lo: transitions/fadecolorrgb.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fadecolorrgb.lo -MD -MP -MF "$(DEPDIR)/fadecolorrgb.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fadecolorrgb.lo `test -f 'transitions/fadecolorrgb.c' || echo '$(srcdir)/'`transitions/fadecolorrgb.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fadecolorrgb.Tpo" "$(DEPDIR)/fadecolorrgb.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fadecolorrgb.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/fadecolorrgb.c' object='fadecolorrgb.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fadecolorrgb.Plo' tmpdepfile='$(DEPDIR)/fadecolorrgb.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fadecolorrgb.lo `test -f 'transitions/fadecolorrgb.c' || echo '$(srcdir)/'`transitions/fadecolorrgb.c

magicoverlays.o: effects/magicoverlays.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicoverlays.o -MD -MP -MF "$(DEPDIR)/magicoverlays.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicoverlays.o `test -f 'effects/magicoverlays.c' || echo '$(srcdir)/'`effects/magicoverlays.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicoverlays.Tpo" "$(DEPDIR)/magicoverlays.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicoverlays.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicoverlays.c' object='magicoverlays.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicoverlays.Po' tmpdepfile='$(DEPDIR)/magicoverlays.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicoverlays.o `test -f 'effects/magicoverlays.c' || echo '$(srcdir)/'`effects/magicoverlays.c

magicoverlays.obj: effects/magicoverlays.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicoverlays.obj -MD -MP -MF "$(DEPDIR)/magicoverlays.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicoverlays.obj `if test -f 'effects/magicoverlays.c'; then $(CYGPATH_W) 'effects/magicoverlays.c'; else $(CYGPATH_W) '$(srcdir)/effects/magicoverlays.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicoverlays.Tpo" "$(DEPDIR)/magicoverlays.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicoverlays.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicoverlays.c' object='magicoverlays.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicoverlays.Po' tmpdepfile='$(DEPDIR)/magicoverlays.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicoverlays.obj `if test -f 'effects/magicoverlays.c'; then $(CYGPATH_W) 'effects/magicoverlays.c'; else $(CYGPATH_W) '$(srcdir)/effects/magicoverlays.c'; fi`

magicoverlays.lo: effects/magicoverlays.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicoverlays.lo -MD -MP -MF "$(DEPDIR)/magicoverlays.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicoverlays.lo `test -f 'effects/magicoverlays.c' || echo '$(srcdir)/'`effects/magicoverlays.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicoverlays.Tpo" "$(DEPDIR)/magicoverlays.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicoverlays.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicoverlays.c' object='magicoverlays.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicoverlays.Plo' tmpdepfile='$(DEPDIR)/magicoverlays.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicoverlays.lo `test -f 'effects/magicoverlays.c' || echo '$(srcdir)/'`effects/magicoverlays.c

binaryoverlays.o: effects/binaryoverlays.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT binaryoverlays.o -MD -MP -MF "$(DEPDIR)/binaryoverlays.Tpo" \
@am__fastdepCC_TRUE@	  -c -o binaryoverlays.o `test -f 'effects/binaryoverlays.c' || echo '$(srcdir)/'`effects/binaryoverlays.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/binaryoverlays.Tpo" "$(DEPDIR)/binaryoverlays.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/binaryoverlays.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/binaryoverlays.c' object='binaryoverlays.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/binaryoverlays.Po' tmpdepfile='$(DEPDIR)/binaryoverlays.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o binaryoverlays.o `test -f 'effects/binaryoverlays.c' || echo '$(srcdir)/'`effects/binaryoverlays.c

binaryoverlays.obj: effects/binaryoverlays.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT binaryoverlays.obj -MD -MP -MF "$(DEPDIR)/binaryoverlays.Tpo" \
@am__fastdepCC_TRUE@	  -c -o binaryoverlays.obj `if test -f 'effects/binaryoverlays.c'; then $(CYGPATH_W) 'effects/binaryoverlays.c'; else $(CYGPATH_W) '$(srcdir)/effects/binaryoverlays.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/binaryoverlays.Tpo" "$(DEPDIR)/binaryoverlays.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/binaryoverlays.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/binaryoverlays.c' object='binaryoverlays.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/binaryoverlays.Po' tmpdepfile='$(DEPDIR)/binaryoverlays.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o binaryoverlays.obj `if test -f 'effects/binaryoverlays.c'; then $(CYGPATH_W) 'effects/binaryoverlays.c'; else $(CYGPATH_W) '$(srcdir)/effects/binaryoverlays.c'; fi`

binaryoverlays.lo: effects/binaryoverlays.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT binaryoverlays.lo -MD -MP -MF "$(DEPDIR)/binaryoverlays.Tpo" \
@am__fastdepCC_TRUE@	  -c -o binaryoverlays.lo `test -f 'effects/binaryoverlays.c' || echo '$(srcdir)/'`effects/binaryoverlays.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/binaryoverlays.Tpo" "$(DEPDIR)/binaryoverlays.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/binaryoverlays.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/binaryoverlays.c' object='binaryoverlays.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/binaryoverlays.Plo' tmpdepfile='$(DEPDIR)/binaryoverlays.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o binaryoverlays.lo `test -f 'effects/binaryoverlays.c' || echo '$(srcdir)/'`effects/binaryoverlays.c

pencilsketch.o: effects/pencilsketch.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pencilsketch.o -MD -MP -MF "$(DEPDIR)/pencilsketch.Tpo" \
@am__fastdepCC_TRUE@	  -c -o pencilsketch.o `test -f 'effects/pencilsketch.c' || echo '$(srcdir)/'`effects/pencilsketch.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pencilsketch.Tpo" "$(DEPDIR)/pencilsketch.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/pencilsketch.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/pencilsketch.c' object='pencilsketch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pencilsketch.Po' tmpdepfile='$(DEPDIR)/pencilsketch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pencilsketch.o `test -f 'effects/pencilsketch.c' || echo '$(srcdir)/'`effects/pencilsketch.c

pencilsketch.obj: effects/pencilsketch.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pencilsketch.obj -MD -MP -MF "$(DEPDIR)/pencilsketch.Tpo" \
@am__fastdepCC_TRUE@	  -c -o pencilsketch.obj `if test -f 'effects/pencilsketch.c'; then $(CYGPATH_W) 'effects/pencilsketch.c'; else $(CYGPATH_W) '$(srcdir)/effects/pencilsketch.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pencilsketch.Tpo" "$(DEPDIR)/pencilsketch.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/pencilsketch.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/pencilsketch.c' object='pencilsketch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pencilsketch.Po' tmpdepfile='$(DEPDIR)/pencilsketch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pencilsketch.obj `if test -f 'effects/pencilsketch.c'; then $(CYGPATH_W) 'effects/pencilsketch.c'; else $(CYGPATH_W) '$(srcdir)/effects/pencilsketch.c'; fi`

pencilsketch.lo: effects/pencilsketch.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pencilsketch.lo -MD -MP -MF "$(DEPDIR)/pencilsketch.Tpo" \
@am__fastdepCC_TRUE@	  -c -o pencilsketch.lo `test -f 'effects/pencilsketch.c' || echo '$(srcdir)/'`effects/pencilsketch.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pencilsketch.Tpo" "$(DEPDIR)/pencilsketch.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/pencilsketch.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/pencilsketch.c' object='pencilsketch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pencilsketch.Plo' tmpdepfile='$(DEPDIR)/pencilsketch.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pencilsketch.lo `test -f 'effects/pencilsketch.c' || echo '$(srcdir)/'`effects/pencilsketch.c

diffimg.o: effects/diffimg.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT diffimg.o -MD -MP -MF "$(DEPDIR)/diffimg.Tpo" \
@am__fastdepCC_TRUE@	  -c -o diffimg.o `test -f 'effects/diffimg.c' || echo '$(srcdir)/'`effects/diffimg.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diffimg.Tpo" "$(DEPDIR)/diffimg.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/diffimg.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/diffimg.c' object='diffimg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diffimg.Po' tmpdepfile='$(DEPDIR)/diffimg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o diffimg.o `test -f 'effects/diffimg.c' || echo '$(srcdir)/'`effects/diffimg.c

diffimg.obj: effects/diffimg.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT diffimg.obj -MD -MP -MF "$(DEPDIR)/diffimg.Tpo" \
@am__fastdepCC_TRUE@	  -c -o diffimg.obj `if test -f 'effects/diffimg.c'; then $(CYGPATH_W) 'effects/diffimg.c'; else $(CYGPATH_W) '$(srcdir)/effects/diffimg.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diffimg.Tpo" "$(DEPDIR)/diffimg.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/diffimg.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/diffimg.c' object='diffimg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diffimg.Po' tmpdepfile='$(DEPDIR)/diffimg.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o diffimg.obj `if test -f 'effects/diffimg.c'; then $(CYGPATH_W) 'effects/diffimg.c'; else $(CYGPATH_W) '$(srcdir)/effects/diffimg.c'; fi`

diffimg.lo: effects/diffimg.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT diffimg.lo -MD -MP -MF "$(DEPDIR)/diffimg.Tpo" \
@am__fastdepCC_TRUE@	  -c -o diffimg.lo `test -f 'effects/diffimg.c' || echo '$(srcdir)/'`effects/diffimg.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/diffimg.Tpo" "$(DEPDIR)/diffimg.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/diffimg.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/diffimg.c' object='diffimg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/diffimg.Plo' tmpdepfile='$(DEPDIR)/diffimg.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o diffimg.lo `test -f 'effects/diffimg.c' || echo '$(srcdir)/'`effects/diffimg.c

swirl.o: effects/swirl.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT swirl.o -MD -MP -MF "$(DEPDIR)/swirl.Tpo" \
@am__fastdepCC_TRUE@	  -c -o swirl.o `test -f 'effects/swirl.c' || echo '$(srcdir)/'`effects/swirl.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/swirl.Tpo" "$(DEPDIR)/swirl.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/swirl.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/swirl.c' object='swirl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/swirl.Po' tmpdepfile='$(DEPDIR)/swirl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o swirl.o `test -f 'effects/swirl.c' || echo '$(srcdir)/'`effects/swirl.c

swirl.obj: effects/swirl.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT swirl.obj -MD -MP -MF "$(DEPDIR)/swirl.Tpo" \
@am__fastdepCC_TRUE@	  -c -o swirl.obj `if test -f 'effects/swirl.c'; then $(CYGPATH_W) 'effects/swirl.c'; else $(CYGPATH_W) '$(srcdir)/effects/swirl.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/swirl.Tpo" "$(DEPDIR)/swirl.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/swirl.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/swirl.c' object='swirl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/swirl.Po' tmpdepfile='$(DEPDIR)/swirl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o swirl.obj `if test -f 'effects/swirl.c'; then $(CYGPATH_W) 'effects/swirl.c'; else $(CYGPATH_W) '$(srcdir)/effects/swirl.c'; fi`

swirl.lo: effects/swirl.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT swirl.lo -MD -MP -MF "$(DEPDIR)/swirl.Tpo" \
@am__fastdepCC_TRUE@	  -c -o swirl.lo `test -f 'effects/swirl.c' || echo '$(srcdir)/'`effects/swirl.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/swirl.Tpo" "$(DEPDIR)/swirl.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/swirl.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/swirl.c' object='swirl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/swirl.Plo' tmpdepfile='$(DEPDIR)/swirl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o swirl.lo `test -f 'effects/swirl.c' || echo '$(srcdir)/'`effects/swirl.c

chromium.o: effects/chromium.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromium.o -MD -MP -MF "$(DEPDIR)/chromium.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromium.o `test -f 'effects/chromium.c' || echo '$(srcdir)/'`effects/chromium.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromium.Tpo" "$(DEPDIR)/chromium.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromium.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromium.c' object='chromium.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromium.Po' tmpdepfile='$(DEPDIR)/chromium.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromium.o `test -f 'effects/chromium.c' || echo '$(srcdir)/'`effects/chromium.c

chromium.obj: effects/chromium.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromium.obj -MD -MP -MF "$(DEPDIR)/chromium.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromium.obj `if test -f 'effects/chromium.c'; then $(CYGPATH_W) 'effects/chromium.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromium.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromium.Tpo" "$(DEPDIR)/chromium.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromium.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromium.c' object='chromium.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromium.Po' tmpdepfile='$(DEPDIR)/chromium.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromium.obj `if test -f 'effects/chromium.c'; then $(CYGPATH_W) 'effects/chromium.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromium.c'; fi`

chromium.lo: effects/chromium.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromium.lo -MD -MP -MF "$(DEPDIR)/chromium.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromium.lo `test -f 'effects/chromium.c' || echo '$(srcdir)/'`effects/chromium.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromium.Tpo" "$(DEPDIR)/chromium.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromium.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromium.c' object='chromium.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromium.Plo' tmpdepfile='$(DEPDIR)/chromium.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromium.lo `test -f 'effects/chromium.c' || echo '$(srcdir)/'`effects/chromium.c

chromapalette.o: effects/chromapalette.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromapalette.o -MD -MP -MF "$(DEPDIR)/chromapalette.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromapalette.o `test -f 'effects/chromapalette.c' || echo '$(srcdir)/'`effects/chromapalette.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromapalette.Tpo" "$(DEPDIR)/chromapalette.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromapalette.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromapalette.c' object='chromapalette.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromapalette.Po' tmpdepfile='$(DEPDIR)/chromapalette.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromapalette.o `test -f 'effects/chromapalette.c' || echo '$(srcdir)/'`effects/chromapalette.c

chromapalette.obj: effects/chromapalette.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromapalette.obj -MD -MP -MF "$(DEPDIR)/chromapalette.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromapalette.obj `if test -f 'effects/chromapalette.c'; then $(CYGPATH_W) 'effects/chromapalette.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromapalette.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromapalette.Tpo" "$(DEPDIR)/chromapalette.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromapalette.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromapalette.c' object='chromapalette.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromapalette.Po' tmpdepfile='$(DEPDIR)/chromapalette.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromapalette.obj `if test -f 'effects/chromapalette.c'; then $(CYGPATH_W) 'effects/chromapalette.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromapalette.c'; fi`

chromapalette.lo: effects/chromapalette.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromapalette.lo -MD -MP -MF "$(DEPDIR)/chromapalette.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromapalette.lo `test -f 'effects/chromapalette.c' || echo '$(srcdir)/'`effects/chromapalette.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromapalette.Tpo" "$(DEPDIR)/chromapalette.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromapalette.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromapalette.c' object='chromapalette.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromapalette.Plo' tmpdepfile='$(DEPDIR)/chromapalette.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromapalette.lo `test -f 'effects/chromapalette.c' || echo '$(srcdir)/'`effects/chromapalette.c

radialblur.o: effects/radialblur.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT radialblur.o -MD -MP -MF "$(DEPDIR)/radialblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o radialblur.o `test -f 'effects/radialblur.c' || echo '$(srcdir)/'`effects/radialblur.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/radialblur.Tpo" "$(DEPDIR)/radialblur.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/radialblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/radialblur.c' object='radialblur.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/radialblur.Po' tmpdepfile='$(DEPDIR)/radialblur.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o radialblur.o `test -f 'effects/radialblur.c' || echo '$(srcdir)/'`effects/radialblur.c

radialblur.obj: effects/radialblur.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT radialblur.obj -MD -MP -MF "$(DEPDIR)/radialblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o radialblur.obj `if test -f 'effects/radialblur.c'; then $(CYGPATH_W) 'effects/radialblur.c'; else $(CYGPATH_W) '$(srcdir)/effects/radialblur.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/radialblur.Tpo" "$(DEPDIR)/radialblur.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/radialblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/radialblur.c' object='radialblur.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/radialblur.Po' tmpdepfile='$(DEPDIR)/radialblur.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o radialblur.obj `if test -f 'effects/radialblur.c'; then $(CYGPATH_W) 'effects/radialblur.c'; else $(CYGPATH_W) '$(srcdir)/effects/radialblur.c'; fi`

radialblur.lo: effects/radialblur.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT radialblur.lo -MD -MP -MF "$(DEPDIR)/radialblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o radialblur.lo `test -f 'effects/radialblur.c' || echo '$(srcdir)/'`effects/radialblur.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/radialblur.Tpo" "$(DEPDIR)/radialblur.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/radialblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/radialblur.c' object='radialblur.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/radialblur.Plo' tmpdepfile='$(DEPDIR)/radialblur.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o radialblur.lo `test -f 'effects/radialblur.c' || echo '$(srcdir)/'`effects/radialblur.c

fisheye.o: effects/fisheye.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fisheye.o -MD -MP -MF "$(DEPDIR)/fisheye.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fisheye.o `test -f 'effects/fisheye.c' || echo '$(srcdir)/'`effects/fisheye.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fisheye.Tpo" "$(DEPDIR)/fisheye.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fisheye.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/fisheye.c' object='fisheye.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fisheye.Po' tmpdepfile='$(DEPDIR)/fisheye.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fisheye.o `test -f 'effects/fisheye.c' || echo '$(srcdir)/'`effects/fisheye.c

fisheye.obj: effects/fisheye.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fisheye.obj -MD -MP -MF "$(DEPDIR)/fisheye.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fisheye.obj `if test -f 'effects/fisheye.c'; then $(CYGPATH_W) 'effects/fisheye.c'; else $(CYGPATH_W) '$(srcdir)/effects/fisheye.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fisheye.Tpo" "$(DEPDIR)/fisheye.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fisheye.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/fisheye.c' object='fisheye.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fisheye.Po' tmpdepfile='$(DEPDIR)/fisheye.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fisheye.obj `if test -f 'effects/fisheye.c'; then $(CYGPATH_W) 'effects/fisheye.c'; else $(CYGPATH_W) '$(srcdir)/effects/fisheye.c'; fi`

fisheye.lo: effects/fisheye.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fisheye.lo -MD -MP -MF "$(DEPDIR)/fisheye.Tpo" \
@am__fastdepCC_TRUE@	  -c -o fisheye.lo `test -f 'effects/fisheye.c' || echo '$(srcdir)/'`effects/fisheye.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fisheye.Tpo" "$(DEPDIR)/fisheye.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/fisheye.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/fisheye.c' object='fisheye.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/fisheye.Plo' tmpdepfile='$(DEPDIR)/fisheye.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fisheye.lo `test -f 'effects/fisheye.c' || echo '$(srcdir)/'`effects/fisheye.c

raster.o: effects/raster.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT raster.o -MD -MP -MF "$(DEPDIR)/raster.Tpo" \
@am__fastdepCC_TRUE@	  -c -o raster.o `test -f 'effects/raster.c' || echo '$(srcdir)/'`effects/raster.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/raster.Tpo" "$(DEPDIR)/raster.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/raster.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/raster.c' object='raster.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/raster.Po' tmpdepfile='$(DEPDIR)/raster.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o raster.o `test -f 'effects/raster.c' || echo '$(srcdir)/'`effects/raster.c

raster.obj: effects/raster.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT raster.obj -MD -MP -MF "$(DEPDIR)/raster.Tpo" \
@am__fastdepCC_TRUE@	  -c -o raster.obj `if test -f 'effects/raster.c'; then $(CYGPATH_W) 'effects/raster.c'; else $(CYGPATH_W) '$(srcdir)/effects/raster.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/raster.Tpo" "$(DEPDIR)/raster.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/raster.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/raster.c' object='raster.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/raster.Po' tmpdepfile='$(DEPDIR)/raster.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o raster.obj `if test -f 'effects/raster.c'; then $(CYGPATH_W) 'effects/raster.c'; else $(CYGPATH_W) '$(srcdir)/effects/raster.c'; fi`

raster.lo: effects/raster.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT raster.lo -MD -MP -MF "$(DEPDIR)/raster.Tpo" \
@am__fastdepCC_TRUE@	  -c -o raster.lo `test -f 'effects/raster.c' || echo '$(srcdir)/'`effects/raster.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/raster.Tpo" "$(DEPDIR)/raster.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/raster.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/raster.c' object='raster.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/raster.Plo' tmpdepfile='$(DEPDIR)/raster.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o raster.lo `test -f 'effects/raster.c' || echo '$(srcdir)/'`effects/raster.c

smear.o: effects/smear.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smear.o -MD -MP -MF "$(DEPDIR)/smear.Tpo" \
@am__fastdepCC_TRUE@	  -c -o smear.o `test -f 'effects/smear.c' || echo '$(srcdir)/'`effects/smear.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/smear.Tpo" "$(DEPDIR)/smear.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/smear.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/smear.c' object='smear.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/smear.Po' tmpdepfile='$(DEPDIR)/smear.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smear.o `test -f 'effects/smear.c' || echo '$(srcdir)/'`effects/smear.c

smear.obj: effects/smear.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smear.obj -MD -MP -MF "$(DEPDIR)/smear.Tpo" \
@am__fastdepCC_TRUE@	  -c -o smear.obj `if test -f 'effects/smear.c'; then $(CYGPATH_W) 'effects/smear.c'; else $(CYGPATH_W) '$(srcdir)/effects/smear.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/smear.Tpo" "$(DEPDIR)/smear.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/smear.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/smear.c' object='smear.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/smear.Po' tmpdepfile='$(DEPDIR)/smear.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smear.obj `if test -f 'effects/smear.c'; then $(CYGPATH_W) 'effects/smear.c'; else $(CYGPATH_W) '$(srcdir)/effects/smear.c'; fi`

smear.lo: effects/smear.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT smear.lo -MD -MP -MF "$(DEPDIR)/smear.Tpo" \
@am__fastdepCC_TRUE@	  -c -o smear.lo `test -f 'effects/smear.c' || echo '$(srcdir)/'`effects/smear.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/smear.Tpo" "$(DEPDIR)/smear.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/smear.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/smear.c' object='smear.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/smear.Plo' tmpdepfile='$(DEPDIR)/smear.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smear.lo `test -f 'effects/smear.c' || echo '$(srcdir)/'`effects/smear.c

magicmirror.o: effects/magicmirror.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicmirror.o -MD -MP -MF "$(DEPDIR)/magicmirror.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicmirror.o `test -f 'effects/magicmirror.c' || echo '$(srcdir)/'`effects/magicmirror.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicmirror.Tpo" "$(DEPDIR)/magicmirror.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicmirror.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicmirror.c' object='magicmirror.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicmirror.Po' tmpdepfile='$(DEPDIR)/magicmirror.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicmirror.o `test -f 'effects/magicmirror.c' || echo '$(srcdir)/'`effects/magicmirror.c

magicmirror.obj: effects/magicmirror.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicmirror.obj -MD -MP -MF "$(DEPDIR)/magicmirror.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicmirror.obj `if test -f 'effects/magicmirror.c'; then $(CYGPATH_W) 'effects/magicmirror.c'; else $(CYGPATH_W) '$(srcdir)/effects/magicmirror.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicmirror.Tpo" "$(DEPDIR)/magicmirror.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicmirror.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicmirror.c' object='magicmirror.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicmirror.Po' tmpdepfile='$(DEPDIR)/magicmirror.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicmirror.obj `if test -f 'effects/magicmirror.c'; then $(CYGPATH_W) 'effects/magicmirror.c'; else $(CYGPATH_W) '$(srcdir)/effects/magicmirror.c'; fi`

magicmirror.lo: effects/magicmirror.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicmirror.lo -MD -MP -MF "$(DEPDIR)/magicmirror.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicmirror.lo `test -f 'effects/magicmirror.c' || echo '$(srcdir)/'`effects/magicmirror.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicmirror.Tpo" "$(DEPDIR)/magicmirror.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicmirror.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicmirror.c' object='magicmirror.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicmirror.Plo' tmpdepfile='$(DEPDIR)/magicmirror.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicmirror.lo `test -f 'effects/magicmirror.c' || echo '$(srcdir)/'`effects/magicmirror.c

lumamask.o: effects/lumamask.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumamask.o -MD -MP -MF "$(DEPDIR)/lumamask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumamask.o `test -f 'effects/lumamask.c' || echo '$(srcdir)/'`effects/lumamask.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumamask.Tpo" "$(DEPDIR)/lumamask.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumamask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumamask.c' object='lumamask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumamask.Po' tmpdepfile='$(DEPDIR)/lumamask.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumamask.o `test -f 'effects/lumamask.c' || echo '$(srcdir)/'`effects/lumamask.c

lumamask.obj: effects/lumamask.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumamask.obj -MD -MP -MF "$(DEPDIR)/lumamask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumamask.obj `if test -f 'effects/lumamask.c'; then $(CYGPATH_W) 'effects/lumamask.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumamask.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumamask.Tpo" "$(DEPDIR)/lumamask.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumamask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumamask.c' object='lumamask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumamask.Po' tmpdepfile='$(DEPDIR)/lumamask.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumamask.obj `if test -f 'effects/lumamask.c'; then $(CYGPATH_W) 'effects/lumamask.c'; else $(CYGPATH_W) '$(srcdir)/effects/lumamask.c'; fi`

lumamask.lo: effects/lumamask.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lumamask.lo -MD -MP -MF "$(DEPDIR)/lumamask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o lumamask.lo `test -f 'effects/lumamask.c' || echo '$(srcdir)/'`effects/lumamask.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lumamask.Tpo" "$(DEPDIR)/lumamask.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/lumamask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/lumamask.c' object='lumamask.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/lumamask.Plo' tmpdepfile='$(DEPDIR)/lumamask.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lumamask.lo `test -f 'effects/lumamask.c' || echo '$(srcdir)/'`effects/lumamask.c

pixelate.o: effects/pixelate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pixelate.o -MD -MP -MF "$(DEPDIR)/pixelate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o pixelate.o `test -f 'effects/pixelate.c' || echo '$(srcdir)/'`effects/pixelate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pixelate.Tpo" "$(DEPDIR)/pixelate.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/pixelate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/pixelate.c' object='pixelate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pixelate.Po' tmpdepfile='$(DEPDIR)/pixelate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pixelate.o `test -f 'effects/pixelate.c' || echo '$(srcdir)/'`effects/pixelate.c

pixelate.obj: effects/pixelate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pixelate.obj -MD -MP -MF "$(DEPDIR)/pixelate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o pixelate.obj `if test -f 'effects/pixelate.c'; then $(CYGPATH_W) 'effects/pixelate.c'; else $(CYGPATH_W) '$(srcdir)/effects/pixelate.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pixelate.Tpo" "$(DEPDIR)/pixelate.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/pixelate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/pixelate.c' object='pixelate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pixelate.Po' tmpdepfile='$(DEPDIR)/pixelate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pixelate.obj `if test -f 'effects/pixelate.c'; then $(CYGPATH_W) 'effects/pixelate.c'; else $(CYGPATH_W) '$(srcdir)/effects/pixelate.c'; fi`

pixelate.lo: effects/pixelate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pixelate.lo -MD -MP -MF "$(DEPDIR)/pixelate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o pixelate.lo `test -f 'effects/pixelate.c' || echo '$(srcdir)/'`effects/pixelate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/pixelate.Tpo" "$(DEPDIR)/pixelate.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/pixelate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/pixelate.c' object='pixelate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/pixelate.Plo' tmpdepfile='$(DEPDIR)/pixelate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pixelate.lo `test -f 'effects/pixelate.c' || echo '$(srcdir)/'`effects/pixelate.c

colorshift.o: effects/colorshift.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT colorshift.o -MD -MP -MF "$(DEPDIR)/colorshift.Tpo" \
@am__fastdepCC_TRUE@	  -c -o colorshift.o `test -f 'effects/colorshift.c' || echo '$(srcdir)/'`effects/colorshift.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/colorshift.Tpo" "$(DEPDIR)/colorshift.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/colorshift.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/colorshift.c' object='colorshift.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/colorshift.Po' tmpdepfile='$(DEPDIR)/colorshift.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o colorshift.o `test -f 'effects/colorshift.c' || echo '$(srcdir)/'`effects/colorshift.c

colorshift.obj: effects/colorshift.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT colorshift.obj -MD -MP -MF "$(DEPDIR)/colorshift.Tpo" \
@am__fastdepCC_TRUE@	  -c -o colorshift.obj `if test -f 'effects/colorshift.c'; then $(CYGPATH_W) 'effects/colorshift.c'; else $(CYGPATH_W) '$(srcdir)/effects/colorshift.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/colorshift.Tpo" "$(DEPDIR)/colorshift.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/colorshift.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/colorshift.c' object='colorshift.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/colorshift.Po' tmpdepfile='$(DEPDIR)/colorshift.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o colorshift.obj `if test -f 'effects/colorshift.c'; then $(CYGPATH_W) 'effects/colorshift.c'; else $(CYGPATH_W) '$(srcdir)/effects/colorshift.c'; fi`

colorshift.lo: effects/colorshift.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT colorshift.lo -MD -MP -MF "$(DEPDIR)/colorshift.Tpo" \
@am__fastdepCC_TRUE@	  -c -o colorshift.lo `test -f 'effects/colorshift.c' || echo '$(srcdir)/'`effects/colorshift.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/colorshift.Tpo" "$(DEPDIR)/colorshift.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/colorshift.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/colorshift.c' object='colorshift.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/colorshift.Plo' tmpdepfile='$(DEPDIR)/colorshift.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o colorshift.lo `test -f 'effects/colorshift.c' || echo '$(srcdir)/'`effects/colorshift.c

scratcher.o: effects/scratcher.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratcher.o -MD -MP -MF "$(DEPDIR)/scratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o scratcher.o `test -f 'effects/scratcher.c' || echo '$(srcdir)/'`effects/scratcher.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/scratcher.Tpo" "$(DEPDIR)/scratcher.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/scratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/scratcher.c' object='scratcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/scratcher.Po' tmpdepfile='$(DEPDIR)/scratcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratcher.o `test -f 'effects/scratcher.c' || echo '$(srcdir)/'`effects/scratcher.c

scratcher.obj: effects/scratcher.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratcher.obj -MD -MP -MF "$(DEPDIR)/scratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o scratcher.obj `if test -f 'effects/scratcher.c'; then $(CYGPATH_W) 'effects/scratcher.c'; else $(CYGPATH_W) '$(srcdir)/effects/scratcher.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/scratcher.Tpo" "$(DEPDIR)/scratcher.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/scratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/scratcher.c' object='scratcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/scratcher.Po' tmpdepfile='$(DEPDIR)/scratcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratcher.obj `if test -f 'effects/scratcher.c'; then $(CYGPATH_W) 'effects/scratcher.c'; else $(CYGPATH_W) '$(srcdir)/effects/scratcher.c'; fi`

scratcher.lo: effects/scratcher.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratcher.lo -MD -MP -MF "$(DEPDIR)/scratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o scratcher.lo `test -f 'effects/scratcher.c' || echo '$(srcdir)/'`effects/scratcher.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/scratcher.Tpo" "$(DEPDIR)/scratcher.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/scratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/scratcher.c' object='scratcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/scratcher.Plo' tmpdepfile='$(DEPDIR)/scratcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratcher.lo `test -f 'effects/scratcher.c' || echo '$(srcdir)/'`effects/scratcher.c

opacitythreshold.o: effects/opacitythreshold.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacitythreshold.o -MD -MP -MF "$(DEPDIR)/opacitythreshold.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacitythreshold.o `test -f 'effects/opacitythreshold.c' || echo '$(srcdir)/'`effects/opacitythreshold.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacitythreshold.Tpo" "$(DEPDIR)/opacitythreshold.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacitythreshold.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacitythreshold.c' object='opacitythreshold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacitythreshold.Po' tmpdepfile='$(DEPDIR)/opacitythreshold.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacitythreshold.o `test -f 'effects/opacitythreshold.c' || echo '$(srcdir)/'`effects/opacitythreshold.c

opacitythreshold.obj: effects/opacitythreshold.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacitythreshold.obj -MD -MP -MF "$(DEPDIR)/opacitythreshold.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacitythreshold.obj `if test -f 'effects/opacitythreshold.c'; then $(CYGPATH_W) 'effects/opacitythreshold.c'; else $(CYGPATH_W) '$(srcdir)/effects/opacitythreshold.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacitythreshold.Tpo" "$(DEPDIR)/opacitythreshold.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacitythreshold.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacitythreshold.c' object='opacitythreshold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacitythreshold.Po' tmpdepfile='$(DEPDIR)/opacitythreshold.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacitythreshold.obj `if test -f 'effects/opacitythreshold.c'; then $(CYGPATH_W) 'effects/opacitythreshold.c'; else $(CYGPATH_W) '$(srcdir)/effects/opacitythreshold.c'; fi`

opacitythreshold.lo: effects/opacitythreshold.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacitythreshold.lo -MD -MP -MF "$(DEPDIR)/opacitythreshold.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacitythreshold.lo `test -f 'effects/opacitythreshold.c' || echo '$(srcdir)/'`effects/opacitythreshold.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacitythreshold.Tpo" "$(DEPDIR)/opacitythreshold.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacitythreshold.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacitythreshold.c' object='opacitythreshold.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacitythreshold.Plo' tmpdepfile='$(DEPDIR)/opacitythreshold.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacitythreshold.lo `test -f 'effects/opacitythreshold.c' || echo '$(srcdir)/'`effects/opacitythreshold.c

opacityadv.o: effects/opacityadv.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacityadv.o -MD -MP -MF "$(DEPDIR)/opacityadv.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacityadv.o `test -f 'effects/opacityadv.c' || echo '$(srcdir)/'`effects/opacityadv.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacityadv.Tpo" "$(DEPDIR)/opacityadv.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacityadv.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacityadv.c' object='opacityadv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacityadv.Po' tmpdepfile='$(DEPDIR)/opacityadv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacityadv.o `test -f 'effects/opacityadv.c' || echo '$(srcdir)/'`effects/opacityadv.c

opacityadv.obj: effects/opacityadv.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacityadv.obj -MD -MP -MF "$(DEPDIR)/opacityadv.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacityadv.obj `if test -f 'effects/opacityadv.c'; then $(CYGPATH_W) 'effects/opacityadv.c'; else $(CYGPATH_W) '$(srcdir)/effects/opacityadv.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacityadv.Tpo" "$(DEPDIR)/opacityadv.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacityadv.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacityadv.c' object='opacityadv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacityadv.Po' tmpdepfile='$(DEPDIR)/opacityadv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacityadv.obj `if test -f 'effects/opacityadv.c'; then $(CYGPATH_W) 'effects/opacityadv.c'; else $(CYGPATH_W) '$(srcdir)/effects/opacityadv.c'; fi`

opacityadv.lo: effects/opacityadv.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opacityadv.lo -MD -MP -MF "$(DEPDIR)/opacityadv.Tpo" \
@am__fastdepCC_TRUE@	  -c -o opacityadv.lo `test -f 'effects/opacityadv.c' || echo '$(srcdir)/'`effects/opacityadv.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/opacityadv.Tpo" "$(DEPDIR)/opacityadv.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/opacityadv.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/opacityadv.c' object='opacityadv.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/opacityadv.Plo' tmpdepfile='$(DEPDIR)/opacityadv.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opacityadv.lo `test -f 'effects/opacityadv.c' || echo '$(srcdir)/'`effects/opacityadv.c

rgbkeysmooth.o: effects/rgbkeysmooth.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rgbkeysmooth.o -MD -MP -MF "$(DEPDIR)/rgbkeysmooth.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rgbkeysmooth.o `test -f 'effects/rgbkeysmooth.c' || echo '$(srcdir)/'`effects/rgbkeysmooth.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rgbkeysmooth.Tpo" "$(DEPDIR)/rgbkeysmooth.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rgbkeysmooth.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rgbkeysmooth.c' object='rgbkeysmooth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rgbkeysmooth.Po' tmpdepfile='$(DEPDIR)/rgbkeysmooth.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rgbkeysmooth.o `test -f 'effects/rgbkeysmooth.c' || echo '$(srcdir)/'`effects/rgbkeysmooth.c

rgbkeysmooth.obj: effects/rgbkeysmooth.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rgbkeysmooth.obj -MD -MP -MF "$(DEPDIR)/rgbkeysmooth.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rgbkeysmooth.obj `if test -f 'effects/rgbkeysmooth.c'; then $(CYGPATH_W) 'effects/rgbkeysmooth.c'; else $(CYGPATH_W) '$(srcdir)/effects/rgbkeysmooth.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rgbkeysmooth.Tpo" "$(DEPDIR)/rgbkeysmooth.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rgbkeysmooth.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rgbkeysmooth.c' object='rgbkeysmooth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rgbkeysmooth.Po' tmpdepfile='$(DEPDIR)/rgbkeysmooth.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rgbkeysmooth.obj `if test -f 'effects/rgbkeysmooth.c'; then $(CYGPATH_W) 'effects/rgbkeysmooth.c'; else $(CYGPATH_W) '$(srcdir)/effects/rgbkeysmooth.c'; fi`

rgbkeysmooth.lo: effects/rgbkeysmooth.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rgbkeysmooth.lo -MD -MP -MF "$(DEPDIR)/rgbkeysmooth.Tpo" \
@am__fastdepCC_TRUE@	  -c -o rgbkeysmooth.lo `test -f 'effects/rgbkeysmooth.c' || echo '$(srcdir)/'`effects/rgbkeysmooth.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/rgbkeysmooth.Tpo" "$(DEPDIR)/rgbkeysmooth.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/rgbkeysmooth.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/rgbkeysmooth.c' object='rgbkeysmooth.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/rgbkeysmooth.Plo' tmpdepfile='$(DEPDIR)/rgbkeysmooth.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rgbkeysmooth.lo `test -f 'effects/rgbkeysmooth.c' || echo '$(srcdir)/'`effects/rgbkeysmooth.c

mask.o: effects/mask.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mask.o -MD -MP -MF "$(DEPDIR)/mask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mask.o `test -f 'effects/mask.c' || echo '$(srcdir)/'`effects/mask.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mask.Tpo" "$(DEPDIR)/mask.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mask.c' object='mask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mask.Po' tmpdepfile='$(DEPDIR)/mask.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mask.o `test -f 'effects/mask.c' || echo '$(srcdir)/'`effects/mask.c

mask.obj: effects/mask.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mask.obj -MD -MP -MF "$(DEPDIR)/mask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mask.obj `if test -f 'effects/mask.c'; then $(CYGPATH_W) 'effects/mask.c'; else $(CYGPATH_W) '$(srcdir)/effects/mask.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mask.Tpo" "$(DEPDIR)/mask.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mask.c' object='mask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mask.Po' tmpdepfile='$(DEPDIR)/mask.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mask.obj `if test -f 'effects/mask.c'; then $(CYGPATH_W) 'effects/mask.c'; else $(CYGPATH_W) '$(srcdir)/effects/mask.c'; fi`

mask.lo: effects/mask.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mask.lo -MD -MP -MF "$(DEPDIR)/mask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mask.lo `test -f 'effects/mask.c' || echo '$(srcdir)/'`effects/mask.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mask.Tpo" "$(DEPDIR)/mask.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mask.c' object='mask.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mask.Plo' tmpdepfile='$(DEPDIR)/mask.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mask.lo `test -f 'effects/mask.c' || echo '$(srcdir)/'`effects/mask.c

distort.o: effects/distort.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT distort.o -MD -MP -MF "$(DEPDIR)/distort.Tpo" \
@am__fastdepCC_TRUE@	  -c -o distort.o `test -f 'effects/distort.c' || echo '$(srcdir)/'`effects/distort.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/distort.Tpo" "$(DEPDIR)/distort.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/distort.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/distort.c' object='distort.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/distort.Po' tmpdepfile='$(DEPDIR)/distort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o distort.o `test -f 'effects/distort.c' || echo '$(srcdir)/'`effects/distort.c

distort.obj: effects/distort.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT distort.obj -MD -MP -MF "$(DEPDIR)/distort.Tpo" \
@am__fastdepCC_TRUE@	  -c -o distort.obj `if test -f 'effects/distort.c'; then $(CYGPATH_W) 'effects/distort.c'; else $(CYGPATH_W) '$(srcdir)/effects/distort.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/distort.Tpo" "$(DEPDIR)/distort.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/distort.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/distort.c' object='distort.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/distort.Po' tmpdepfile='$(DEPDIR)/distort.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o distort.obj `if test -f 'effects/distort.c'; then $(CYGPATH_W) 'effects/distort.c'; else $(CYGPATH_W) '$(srcdir)/effects/distort.c'; fi`

distort.lo: effects/distort.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT distort.lo -MD -MP -MF "$(DEPDIR)/distort.Tpo" \
@am__fastdepCC_TRUE@	  -c -o distort.lo `test -f 'effects/distort.c' || echo '$(srcdir)/'`effects/distort.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/distort.Tpo" "$(DEPDIR)/distort.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/distort.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/distort.c' object='distort.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/distort.Plo' tmpdepfile='$(DEPDIR)/distort.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o distort.lo `test -f 'effects/distort.c' || echo '$(srcdir)/'`effects/distort.c

wipe.o: transitions/wipe.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wipe.o -MD -MP -MF "$(DEPDIR)/wipe.Tpo" \
@am__fastdepCC_TRUE@	  -c -o wipe.o `test -f 'transitions/wipe.c' || echo '$(srcdir)/'`transitions/wipe.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/wipe.Tpo" "$(DEPDIR)/wipe.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/wipe.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/wipe.c' object='wipe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/wipe.Po' tmpdepfile='$(DEPDIR)/wipe.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wipe.o `test -f 'transitions/wipe.c' || echo '$(srcdir)/'`transitions/wipe.c

wipe.obj: transitions/wipe.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wipe.obj -MD -MP -MF "$(DEPDIR)/wipe.Tpo" \
@am__fastdepCC_TRUE@	  -c -o wipe.obj `if test -f 'transitions/wipe.c'; then $(CYGPATH_W) 'transitions/wipe.c'; else $(CYGPATH_W) '$(srcdir)/transitions/wipe.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/wipe.Tpo" "$(DEPDIR)/wipe.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/wipe.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/wipe.c' object='wipe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/wipe.Po' tmpdepfile='$(DEPDIR)/wipe.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wipe.obj `if test -f 'transitions/wipe.c'; then $(CYGPATH_W) 'transitions/wipe.c'; else $(CYGPATH_W) '$(srcdir)/transitions/wipe.c'; fi`

wipe.lo: transitions/wipe.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wipe.lo -MD -MP -MF "$(DEPDIR)/wipe.Tpo" \
@am__fastdepCC_TRUE@	  -c -o wipe.lo `test -f 'transitions/wipe.c' || echo '$(srcdir)/'`transitions/wipe.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/wipe.Tpo" "$(DEPDIR)/wipe.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/wipe.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/wipe.c' object='wipe.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/wipe.Plo' tmpdepfile='$(DEPDIR)/wipe.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wipe.lo `test -f 'transitions/wipe.c' || echo '$(srcdir)/'`transitions/wipe.c

magicscratcher.o: effects/magicscratcher.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicscratcher.o -MD -MP -MF "$(DEPDIR)/magicscratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicscratcher.o `test -f 'effects/magicscratcher.c' || echo '$(srcdir)/'`effects/magicscratcher.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicscratcher.Tpo" "$(DEPDIR)/magicscratcher.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicscratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicscratcher.c' object='magicscratcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicscratcher.Po' tmpdepfile='$(DEPDIR)/magicscratcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicscratcher.o `test -f 'effects/magicscratcher.c' || echo '$(srcdir)/'`effects/magicscratcher.c

magicscratcher.obj: effects/magicscratcher.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicscratcher.obj -MD -MP -MF "$(DEPDIR)/magicscratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicscratcher.obj `if test -f 'effects/magicscratcher.c'; then $(CYGPATH_W) 'effects/magicscratcher.c'; else $(CYGPATH_W) '$(srcdir)/effects/magicscratcher.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicscratcher.Tpo" "$(DEPDIR)/magicscratcher.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicscratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicscratcher.c' object='magicscratcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicscratcher.Po' tmpdepfile='$(DEPDIR)/magicscratcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicscratcher.obj `if test -f 'effects/magicscratcher.c'; then $(CYGPATH_W) 'effects/magicscratcher.c'; else $(CYGPATH_W) '$(srcdir)/effects/magicscratcher.c'; fi`

magicscratcher.lo: effects/magicscratcher.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT magicscratcher.lo -MD -MP -MF "$(DEPDIR)/magicscratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o magicscratcher.lo `test -f 'effects/magicscratcher.c' || echo '$(srcdir)/'`effects/magicscratcher.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/magicscratcher.Tpo" "$(DEPDIR)/magicscratcher.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/magicscratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/magicscratcher.c' object='magicscratcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/magicscratcher.Plo' tmpdepfile='$(DEPDIR)/magicscratcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o magicscratcher.lo `test -f 'effects/magicscratcher.c' || echo '$(srcdir)/'`effects/magicscratcher.c

chromascratcher.o: effects/chromascratcher.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromascratcher.o -MD -MP -MF "$(DEPDIR)/chromascratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromascratcher.o `test -f 'effects/chromascratcher.c' || echo '$(srcdir)/'`effects/chromascratcher.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromascratcher.Tpo" "$(DEPDIR)/chromascratcher.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromascratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromascratcher.c' object='chromascratcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromascratcher.Po' tmpdepfile='$(DEPDIR)/chromascratcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromascratcher.o `test -f 'effects/chromascratcher.c' || echo '$(srcdir)/'`effects/chromascratcher.c

chromascratcher.obj: effects/chromascratcher.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromascratcher.obj -MD -MP -MF "$(DEPDIR)/chromascratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromascratcher.obj `if test -f 'effects/chromascratcher.c'; then $(CYGPATH_W) 'effects/chromascratcher.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromascratcher.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromascratcher.Tpo" "$(DEPDIR)/chromascratcher.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromascratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromascratcher.c' object='chromascratcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromascratcher.Po' tmpdepfile='$(DEPDIR)/chromascratcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromascratcher.obj `if test -f 'effects/chromascratcher.c'; then $(CYGPATH_W) 'effects/chromascratcher.c'; else $(CYGPATH_W) '$(srcdir)/effects/chromascratcher.c'; fi`

chromascratcher.lo: effects/chromascratcher.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chromascratcher.lo -MD -MP -MF "$(DEPDIR)/chromascratcher.Tpo" \
@am__fastdepCC_TRUE@	  -c -o chromascratcher.lo `test -f 'effects/chromascratcher.c' || echo '$(srcdir)/'`effects/chromascratcher.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/chromascratcher.Tpo" "$(DEPDIR)/chromascratcher.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/chromascratcher.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/chromascratcher.c' object='chromascratcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/chromascratcher.Plo' tmpdepfile='$(DEPDIR)/chromascratcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chromascratcher.lo `test -f 'effects/chromascratcher.c' || echo '$(srcdir)/'`effects/chromascratcher.c

tracer.o: effects/tracer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tracer.o -MD -MP -MF "$(DEPDIR)/tracer.Tpo" \
@am__fastdepCC_TRUE@	  -c -o tracer.o `test -f 'effects/tracer.c' || echo '$(srcdir)/'`effects/tracer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/tracer.Tpo" "$(DEPDIR)/tracer.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/tracer.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/tracer.c' object='tracer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/tracer.Po' tmpdepfile='$(DEPDIR)/tracer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tracer.o `test -f 'effects/tracer.c' || echo '$(srcdir)/'`effects/tracer.c

tracer.obj: effects/tracer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tracer.obj -MD -MP -MF "$(DEPDIR)/tracer.Tpo" \
@am__fastdepCC_TRUE@	  -c -o tracer.obj `if test -f 'effects/tracer.c'; then $(CYGPATH_W) 'effects/tracer.c'; else $(CYGPATH_W) '$(srcdir)/effects/tracer.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/tracer.Tpo" "$(DEPDIR)/tracer.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/tracer.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/tracer.c' object='tracer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/tracer.Po' tmpdepfile='$(DEPDIR)/tracer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tracer.obj `if test -f 'effects/tracer.c'; then $(CYGPATH_W) 'effects/tracer.c'; else $(CYGPATH_W) '$(srcdir)/effects/tracer.c'; fi`

tracer.lo: effects/tracer.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tracer.lo -MD -MP -MF "$(DEPDIR)/tracer.Tpo" \
@am__fastdepCC_TRUE@	  -c -o tracer.lo `test -f 'effects/tracer.c' || echo '$(srcdir)/'`effects/tracer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/tracer.Tpo" "$(DEPDIR)/tracer.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/tracer.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/tracer.c' object='tracer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/tracer.Plo' tmpdepfile='$(DEPDIR)/tracer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tracer.lo `test -f 'effects/tracer.c' || echo '$(srcdir)/'`effects/tracer.c

mtracer.o: effects/mtracer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mtracer.o -MD -MP -MF "$(DEPDIR)/mtracer.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mtracer.o `test -f 'effects/mtracer.c' || echo '$(srcdir)/'`effects/mtracer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mtracer.Tpo" "$(DEPDIR)/mtracer.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mtracer.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mtracer.c' object='mtracer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mtracer.Po' tmpdepfile='$(DEPDIR)/mtracer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mtracer.o `test -f 'effects/mtracer.c' || echo '$(srcdir)/'`effects/mtracer.c

mtracer.obj: effects/mtracer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mtracer.obj -MD -MP -MF "$(DEPDIR)/mtracer.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mtracer.obj `if test -f 'effects/mtracer.c'; then $(CYGPATH_W) 'effects/mtracer.c'; else $(CYGPATH_W) '$(srcdir)/effects/mtracer.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mtracer.Tpo" "$(DEPDIR)/mtracer.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mtracer.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mtracer.c' object='mtracer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mtracer.Po' tmpdepfile='$(DEPDIR)/mtracer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mtracer.obj `if test -f 'effects/mtracer.c'; then $(CYGPATH_W) 'effects/mtracer.c'; else $(CYGPATH_W) '$(srcdir)/effects/mtracer.c'; fi`

mtracer.lo: effects/mtracer.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mtracer.lo -MD -MP -MF "$(DEPDIR)/mtracer.Tpo" \
@am__fastdepCC_TRUE@	  -c -o mtracer.lo `test -f 'effects/mtracer.c' || echo '$(srcdir)/'`effects/mtracer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mtracer.Tpo" "$(DEPDIR)/mtracer.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/mtracer.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/mtracer.c' object='mtracer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mtracer.Plo' tmpdepfile='$(DEPDIR)/mtracer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mtracer.lo `test -f 'effects/mtracer.c' || echo '$(srcdir)/'`effects/mtracer.c

dupmagic.o: effects/dupmagic.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dupmagic.o -MD -MP -MF "$(DEPDIR)/dupmagic.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dupmagic.o `test -f 'effects/dupmagic.c' || echo '$(srcdir)/'`effects/dupmagic.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dupmagic.Tpo" "$(DEPDIR)/dupmagic.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dupmagic.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dupmagic.c' object='dupmagic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dupmagic.Po' tmpdepfile='$(DEPDIR)/dupmagic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dupmagic.o `test -f 'effects/dupmagic.c' || echo '$(srcdir)/'`effects/dupmagic.c

dupmagic.obj: effects/dupmagic.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dupmagic.obj -MD -MP -MF "$(DEPDIR)/dupmagic.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dupmagic.obj `if test -f 'effects/dupmagic.c'; then $(CYGPATH_W) 'effects/dupmagic.c'; else $(CYGPATH_W) '$(srcdir)/effects/dupmagic.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dupmagic.Tpo" "$(DEPDIR)/dupmagic.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dupmagic.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dupmagic.c' object='dupmagic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dupmagic.Po' tmpdepfile='$(DEPDIR)/dupmagic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dupmagic.obj `if test -f 'effects/dupmagic.c'; then $(CYGPATH_W) 'effects/dupmagic.c'; else $(CYGPATH_W) '$(srcdir)/effects/dupmagic.c'; fi`

dupmagic.lo: effects/dupmagic.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dupmagic.lo -MD -MP -MF "$(DEPDIR)/dupmagic.Tpo" \
@am__fastdepCC_TRUE@	  -c -o dupmagic.lo `test -f 'effects/dupmagic.c' || echo '$(srcdir)/'`effects/dupmagic.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dupmagic.Tpo" "$(DEPDIR)/dupmagic.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/dupmagic.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/dupmagic.c' object='dupmagic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/dupmagic.Plo' tmpdepfile='$(DEPDIR)/dupmagic.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dupmagic.lo `test -f 'effects/dupmagic.c' || echo '$(srcdir)/'`effects/dupmagic.c

keyselect.o: effects/keyselect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT keyselect.o -MD -MP -MF "$(DEPDIR)/keyselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o keyselect.o `test -f 'effects/keyselect.c' || echo '$(srcdir)/'`effects/keyselect.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/keyselect.Tpo" "$(DEPDIR)/keyselect.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/keyselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/keyselect.c' object='keyselect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/keyselect.Po' tmpdepfile='$(DEPDIR)/keyselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o keyselect.o `test -f 'effects/keyselect.c' || echo '$(srcdir)/'`effects/keyselect.c

keyselect.obj: effects/keyselect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT keyselect.obj -MD -MP -MF "$(DEPDIR)/keyselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o keyselect.obj `if test -f 'effects/keyselect.c'; then $(CYGPATH_W) 'effects/keyselect.c'; else $(CYGPATH_W) '$(srcdir)/effects/keyselect.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/keyselect.Tpo" "$(DEPDIR)/keyselect.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/keyselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/keyselect.c' object='keyselect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/keyselect.Po' tmpdepfile='$(DEPDIR)/keyselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o keyselect.obj `if test -f 'effects/keyselect.c'; then $(CYGPATH_W) 'effects/keyselect.c'; else $(CYGPATH_W) '$(srcdir)/effects/keyselect.c'; fi`

keyselect.lo: effects/keyselect.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT keyselect.lo -MD -MP -MF "$(DEPDIR)/keyselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o keyselect.lo `test -f 'effects/keyselect.c' || echo '$(srcdir)/'`effects/keyselect.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/keyselect.Tpo" "$(DEPDIR)/keyselect.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/keyselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/keyselect.c' object='keyselect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/keyselect.Plo' tmpdepfile='$(DEPDIR)/keyselect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o keyselect.lo `test -f 'effects/keyselect.c' || echo '$(srcdir)/'`effects/keyselect.c

greyselect.o: effects/greyselect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT greyselect.o -MD -MP -MF "$(DEPDIR)/greyselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o greyselect.o `test -f 'effects/greyselect.c' || echo '$(srcdir)/'`effects/greyselect.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/greyselect.Tpo" "$(DEPDIR)/greyselect.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/greyselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/greyselect.c' object='greyselect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/greyselect.Po' tmpdepfile='$(DEPDIR)/greyselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o greyselect.o `test -f 'effects/greyselect.c' || echo '$(srcdir)/'`effects/greyselect.c

greyselect.obj: effects/greyselect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT greyselect.obj -MD -MP -MF "$(DEPDIR)/greyselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o greyselect.obj `if test -f 'effects/greyselect.c'; then $(CYGPATH_W) 'effects/greyselect.c'; else $(CYGPATH_W) '$(srcdir)/effects/greyselect.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/greyselect.Tpo" "$(DEPDIR)/greyselect.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/greyselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/greyselect.c' object='greyselect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/greyselect.Po' tmpdepfile='$(DEPDIR)/greyselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o greyselect.obj `if test -f 'effects/greyselect.c'; then $(CYGPATH_W) 'effects/greyselect.c'; else $(CYGPATH_W) '$(srcdir)/effects/greyselect.c'; fi`

greyselect.lo: effects/greyselect.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT greyselect.lo -MD -MP -MF "$(DEPDIR)/greyselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o greyselect.lo `test -f 'effects/greyselect.c' || echo '$(srcdir)/'`effects/greyselect.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/greyselect.Tpo" "$(DEPDIR)/greyselect.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/greyselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/greyselect.c' object='greyselect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/greyselect.Plo' tmpdepfile='$(DEPDIR)/greyselect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o greyselect.lo `test -f 'effects/greyselect.c' || echo '$(srcdir)/'`effects/greyselect.c

bwselect.o: effects/bwselect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bwselect.o -MD -MP -MF "$(DEPDIR)/bwselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o bwselect.o `test -f 'effects/bwselect.c' || echo '$(srcdir)/'`effects/bwselect.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/bwselect.Tpo" "$(DEPDIR)/bwselect.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/bwselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/bwselect.c' object='bwselect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/bwselect.Po' tmpdepfile='$(DEPDIR)/bwselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bwselect.o `test -f 'effects/bwselect.c' || echo '$(srcdir)/'`effects/bwselect.c

bwselect.obj: effects/bwselect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bwselect.obj -MD -MP -MF "$(DEPDIR)/bwselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o bwselect.obj `if test -f 'effects/bwselect.c'; then $(CYGPATH_W) 'effects/bwselect.c'; else $(CYGPATH_W) '$(srcdir)/effects/bwselect.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/bwselect.Tpo" "$(DEPDIR)/bwselect.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/bwselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/bwselect.c' object='bwselect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/bwselect.Po' tmpdepfile='$(DEPDIR)/bwselect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bwselect.obj `if test -f 'effects/bwselect.c'; then $(CYGPATH_W) 'effects/bwselect.c'; else $(CYGPATH_W) '$(srcdir)/effects/bwselect.c'; fi`

bwselect.lo: effects/bwselect.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bwselect.lo -MD -MP -MF "$(DEPDIR)/bwselect.Tpo" \
@am__fastdepCC_TRUE@	  -c -o bwselect.lo `test -f 'effects/bwselect.c' || echo '$(srcdir)/'`effects/bwselect.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/bwselect.Tpo" "$(DEPDIR)/bwselect.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/bwselect.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/bwselect.c' object='bwselect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/bwselect.Plo' tmpdepfile='$(DEPDIR)/bwselect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bwselect.lo `test -f 'effects/bwselect.c' || echo '$(srcdir)/'`effects/bwselect.c

complexsaturate.o: effects/complexsaturate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexsaturate.o -MD -MP -MF "$(DEPDIR)/complexsaturate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexsaturate.o `test -f 'effects/complexsaturate.c' || echo '$(srcdir)/'`effects/complexsaturate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexsaturate.Tpo" "$(DEPDIR)/complexsaturate.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexsaturate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexsaturate.c' object='complexsaturate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexsaturate.Po' tmpdepfile='$(DEPDIR)/complexsaturate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexsaturate.o `test -f 'effects/complexsaturate.c' || echo '$(srcdir)/'`effects/complexsaturate.c

complexsaturate.obj: effects/complexsaturate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexsaturate.obj -MD -MP -MF "$(DEPDIR)/complexsaturate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexsaturate.obj `if test -f 'effects/complexsaturate.c'; then $(CYGPATH_W) 'effects/complexsaturate.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexsaturate.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexsaturate.Tpo" "$(DEPDIR)/complexsaturate.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexsaturate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexsaturate.c' object='complexsaturate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexsaturate.Po' tmpdepfile='$(DEPDIR)/complexsaturate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexsaturate.obj `if test -f 'effects/complexsaturate.c'; then $(CYGPATH_W) 'effects/complexsaturate.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexsaturate.c'; fi`

complexsaturate.lo: effects/complexsaturate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexsaturate.lo -MD -MP -MF "$(DEPDIR)/complexsaturate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexsaturate.lo `test -f 'effects/complexsaturate.c' || echo '$(srcdir)/'`effects/complexsaturate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexsaturate.Tpo" "$(DEPDIR)/complexsaturate.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexsaturate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexsaturate.c' object='complexsaturate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexsaturate.Plo' tmpdepfile='$(DEPDIR)/complexsaturate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexsaturate.lo `test -f 'effects/complexsaturate.c' || echo '$(srcdir)/'`effects/complexsaturate.c

complexthreshold.o: effects/complexthreshold.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexthreshold.o -MD -MP -MF "$(DEPDIR)/complexthreshold.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexthreshold.o `test -f 'effects/complexthreshold.c' || echo '$(srcdir)/'`effects/complexthreshold.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexthreshold.Tpo" "$(DEPDIR)/complexthreshold.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexthreshold.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexthreshold.c' object='complexthreshold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexthreshold.Po' tmpdepfile='$(DEPDIR)/complexthreshold.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexthreshold.o `test -f 'effects/complexthreshold.c' || echo '$(srcdir)/'`effects/complexthreshold.c

complexthreshold.obj: effects/complexthreshold.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexthreshold.obj -MD -MP -MF "$(DEPDIR)/complexthreshold.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexthreshold.obj `if test -f 'effects/complexthreshold.c'; then $(CYGPATH_W) 'effects/complexthreshold.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexthreshold.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexthreshold.Tpo" "$(DEPDIR)/complexthreshold.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexthreshold.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexthreshold.c' object='complexthreshold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexthreshold.Po' tmpdepfile='$(DEPDIR)/complexthreshold.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexthreshold.obj `if test -f 'effects/complexthreshold.c'; then $(CYGPATH_W) 'effects/complexthreshold.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexthreshold.c'; fi`

complexthreshold.lo: effects/complexthreshold.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexthreshold.lo -MD -MP -MF "$(DEPDIR)/complexthreshold.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexthreshold.lo `test -f 'effects/complexthreshold.c' || echo '$(srcdir)/'`effects/complexthreshold.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexthreshold.Tpo" "$(DEPDIR)/complexthreshold.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexthreshold.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexthreshold.c' object='complexthreshold.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexthreshold.Plo' tmpdepfile='$(DEPDIR)/complexthreshold.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexthreshold.lo `test -f 'effects/complexthreshold.c' || echo '$(srcdir)/'`effects/complexthreshold.c

complexinvert.o: effects/complexinvert.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexinvert.o -MD -MP -MF "$(DEPDIR)/complexinvert.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexinvert.o `test -f 'effects/complexinvert.c' || echo '$(srcdir)/'`effects/complexinvert.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexinvert.Tpo" "$(DEPDIR)/complexinvert.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexinvert.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexinvert.c' object='complexinvert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexinvert.Po' tmpdepfile='$(DEPDIR)/complexinvert.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexinvert.o `test -f 'effects/complexinvert.c' || echo '$(srcdir)/'`effects/complexinvert.c

complexinvert.obj: effects/complexinvert.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexinvert.obj -MD -MP -MF "$(DEPDIR)/complexinvert.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexinvert.obj `if test -f 'effects/complexinvert.c'; then $(CYGPATH_W) 'effects/complexinvert.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexinvert.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexinvert.Tpo" "$(DEPDIR)/complexinvert.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexinvert.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexinvert.c' object='complexinvert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexinvert.Po' tmpdepfile='$(DEPDIR)/complexinvert.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexinvert.obj `if test -f 'effects/complexinvert.c'; then $(CYGPATH_W) 'effects/complexinvert.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexinvert.c'; fi`

complexinvert.lo: effects/complexinvert.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexinvert.lo -MD -MP -MF "$(DEPDIR)/complexinvert.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexinvert.lo `test -f 'effects/complexinvert.c' || echo '$(srcdir)/'`effects/complexinvert.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexinvert.Tpo" "$(DEPDIR)/complexinvert.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexinvert.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexinvert.c' object='complexinvert.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexinvert.Plo' tmpdepfile='$(DEPDIR)/complexinvert.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexinvert.lo `test -f 'effects/complexinvert.c' || echo '$(srcdir)/'`effects/complexinvert.c

complexsync.o: effects/complexsync.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexsync.o -MD -MP -MF "$(DEPDIR)/complexsync.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexsync.o `test -f 'effects/complexsync.c' || echo '$(srcdir)/'`effects/complexsync.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexsync.Tpo" "$(DEPDIR)/complexsync.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexsync.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexsync.c' object='complexsync.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexsync.Po' tmpdepfile='$(DEPDIR)/complexsync.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexsync.o `test -f 'effects/complexsync.c' || echo '$(srcdir)/'`effects/complexsync.c

complexsync.obj: effects/complexsync.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexsync.obj -MD -MP -MF "$(DEPDIR)/complexsync.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexsync.obj `if test -f 'effects/complexsync.c'; then $(CYGPATH_W) 'effects/complexsync.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexsync.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexsync.Tpo" "$(DEPDIR)/complexsync.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexsync.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexsync.c' object='complexsync.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexsync.Po' tmpdepfile='$(DEPDIR)/complexsync.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexsync.obj `if test -f 'effects/complexsync.c'; then $(CYGPATH_W) 'effects/complexsync.c'; else $(CYGPATH_W) '$(srcdir)/effects/complexsync.c'; fi`

complexsync.lo: effects/complexsync.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complexsync.lo -MD -MP -MF "$(DEPDIR)/complexsync.Tpo" \
@am__fastdepCC_TRUE@	  -c -o complexsync.lo `test -f 'effects/complexsync.c' || echo '$(srcdir)/'`effects/complexsync.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/complexsync.Tpo" "$(DEPDIR)/complexsync.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/complexsync.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/complexsync.c' object='complexsync.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/complexsync.Plo' tmpdepfile='$(DEPDIR)/complexsync.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complexsync.lo `test -f 'effects/complexsync.c' || echo '$(srcdir)/'`effects/complexsync.c

isolate.o: effects/isolate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isolate.o -MD -MP -MF "$(DEPDIR)/isolate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o isolate.o `test -f 'effects/isolate.c' || echo '$(srcdir)/'`effects/isolate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/isolate.Tpo" "$(DEPDIR)/isolate.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/isolate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/isolate.c' object='isolate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/isolate.Po' tmpdepfile='$(DEPDIR)/isolate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isolate.o `test -f 'effects/isolate.c' || echo '$(srcdir)/'`effects/isolate.c

isolate.obj: effects/isolate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isolate.obj -MD -MP -MF "$(DEPDIR)/isolate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o isolate.obj `if test -f 'effects/isolate.c'; then $(CYGPATH_W) 'effects/isolate.c'; else $(CYGPATH_W) '$(srcdir)/effects/isolate.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/isolate.Tpo" "$(DEPDIR)/isolate.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/isolate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/isolate.c' object='isolate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/isolate.Po' tmpdepfile='$(DEPDIR)/isolate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isolate.obj `if test -f 'effects/isolate.c'; then $(CYGPATH_W) 'effects/isolate.c'; else $(CYGPATH_W) '$(srcdir)/effects/isolate.c'; fi`

isolate.lo: effects/isolate.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isolate.lo -MD -MP -MF "$(DEPDIR)/isolate.Tpo" \
@am__fastdepCC_TRUE@	  -c -o isolate.lo `test -f 'effects/isolate.c' || echo '$(srcdir)/'`effects/isolate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/isolate.Tpo" "$(DEPDIR)/isolate.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/isolate.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/isolate.c' object='isolate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/isolate.Plo' tmpdepfile='$(DEPDIR)/isolate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isolate.lo `test -f 'effects/isolate.c' || echo '$(srcdir)/'`effects/isolate.c

vbar.o: transitions/vbar.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vbar.o -MD -MP -MF "$(DEPDIR)/vbar.Tpo" \
@am__fastdepCC_TRUE@	  -c -o vbar.o `test -f 'transitions/vbar.c' || echo '$(srcdir)/'`transitions/vbar.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vbar.Tpo" "$(DEPDIR)/vbar.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/vbar.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/vbar.c' object='vbar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/vbar.Po' tmpdepfile='$(DEPDIR)/vbar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vbar.o `test -f 'transitions/vbar.c' || echo '$(srcdir)/'`transitions/vbar.c

vbar.obj: transitions/vbar.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vbar.obj -MD -MP -MF "$(DEPDIR)/vbar.Tpo" \
@am__fastdepCC_TRUE@	  -c -o vbar.obj `if test -f 'transitions/vbar.c'; then $(CYGPATH_W) 'transitions/vbar.c'; else $(CYGPATH_W) '$(srcdir)/transitions/vbar.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vbar.Tpo" "$(DEPDIR)/vbar.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/vbar.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/vbar.c' object='vbar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/vbar.Po' tmpdepfile='$(DEPDIR)/vbar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vbar.obj `if test -f 'transitions/vbar.c'; then $(CYGPATH_W) 'transitions/vbar.c'; else $(CYGPATH_W) '$(srcdir)/transitions/vbar.c'; fi`

vbar.lo: transitions/vbar.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vbar.lo -MD -MP -MF "$(DEPDIR)/vbar.Tpo" \
@am__fastdepCC_TRUE@	  -c -o vbar.lo `test -f 'transitions/vbar.c' || echo '$(srcdir)/'`transitions/vbar.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/vbar.Tpo" "$(DEPDIR)/vbar.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/vbar.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/vbar.c' object='vbar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/vbar.Plo' tmpdepfile='$(DEPDIR)/vbar.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vbar.lo `test -f 'transitions/vbar.c' || echo '$(srcdir)/'`transitions/vbar.c

3bar.o: transitions/3bar.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT 3bar.o -MD -MP -MF "$(DEPDIR)/3bar.Tpo" \
@am__fastdepCC_TRUE@	  -c -o 3bar.o `test -f 'transitions/3bar.c' || echo '$(srcdir)/'`transitions/3bar.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/3bar.Tpo" "$(DEPDIR)/3bar.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/3bar.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/3bar.c' object='3bar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/3bar.Po' tmpdepfile='$(DEPDIR)/3bar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o 3bar.o `test -f 'transitions/3bar.c' || echo '$(srcdir)/'`transitions/3bar.c

3bar.obj: transitions/3bar.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT 3bar.obj -MD -MP -MF "$(DEPDIR)/3bar.Tpo" \
@am__fastdepCC_TRUE@	  -c -o 3bar.obj `if test -f 'transitions/3bar.c'; then $(CYGPATH_W) 'transitions/3bar.c'; else $(CYGPATH_W) '$(srcdir)/transitions/3bar.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/3bar.Tpo" "$(DEPDIR)/3bar.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/3bar.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/3bar.c' object='3bar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/3bar.Po' tmpdepfile='$(DEPDIR)/3bar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o 3bar.obj `if test -f 'transitions/3bar.c'; then $(CYGPATH_W) 'transitions/3bar.c'; else $(CYGPATH_W) '$(srcdir)/transitions/3bar.c'; fi`

3bar.lo: transitions/3bar.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT 3bar.lo -MD -MP -MF "$(DEPDIR)/3bar.Tpo" \
@am__fastdepCC_TRUE@	  -c -o 3bar.lo `test -f 'transitions/3bar.c' || echo '$(srcdir)/'`transitions/3bar.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/3bar.Tpo" "$(DEPDIR)/3bar.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/3bar.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='transitions/3bar.c' object='3bar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/3bar.Plo' tmpdepfile='$(DEPDIR)/3bar.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o 3bar.lo `test -f 'transitions/3bar.c' || echo '$(srcdir)/'`transitions/3bar.c

enhancemask.o: effects/enhancemask.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enhancemask.o -MD -MP -MF "$(DEPDIR)/enhancemask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o enhancemask.o `test -f 'effects/enhancemask.c' || echo '$(srcdir)/'`effects/enhancemask.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/enhancemask.Tpo" "$(DEPDIR)/enhancemask.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/enhancemask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/enhancemask.c' object='enhancemask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/enhancemask.Po' tmpdepfile='$(DEPDIR)/enhancemask.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enhancemask.o `test -f 'effects/enhancemask.c' || echo '$(srcdir)/'`effects/enhancemask.c

enhancemask.obj: effects/enhancemask.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enhancemask.obj -MD -MP -MF "$(DEPDIR)/enhancemask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o enhancemask.obj `if test -f 'effects/enhancemask.c'; then $(CYGPATH_W) 'effects/enhancemask.c'; else $(CYGPATH_W) '$(srcdir)/effects/enhancemask.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/enhancemask.Tpo" "$(DEPDIR)/enhancemask.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/enhancemask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/enhancemask.c' object='enhancemask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/enhancemask.Po' tmpdepfile='$(DEPDIR)/enhancemask.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enhancemask.obj `if test -f 'effects/enhancemask.c'; then $(CYGPATH_W) 'effects/enhancemask.c'; else $(CYGPATH_W) '$(srcdir)/effects/enhancemask.c'; fi`

enhancemask.lo: effects/enhancemask.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enhancemask.lo -MD -MP -MF "$(DEPDIR)/enhancemask.Tpo" \
@am__fastdepCC_TRUE@	  -c -o enhancemask.lo `test -f 'effects/enhancemask.c' || echo '$(srcdir)/'`effects/enhancemask.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/enhancemask.Tpo" "$(DEPDIR)/enhancemask.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/enhancemask.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/enhancemask.c' object='enhancemask.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/enhancemask.Plo' tmpdepfile='$(DEPDIR)/enhancemask.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enhancemask.lo `test -f 'effects/enhancemask.c' || echo '$(srcdir)/'`effects/enhancemask.c

noiseadd.o: effects/noiseadd.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noiseadd.o -MD -MP -MF "$(DEPDIR)/noiseadd.Tpo" \
@am__fastdepCC_TRUE@	  -c -o noiseadd.o `test -f 'effects/noiseadd.c' || echo '$(srcdir)/'`effects/noiseadd.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/noiseadd.Tpo" "$(DEPDIR)/noiseadd.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/noiseadd.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/noiseadd.c' object='noiseadd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/noiseadd.Po' tmpdepfile='$(DEPDIR)/noiseadd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noiseadd.o `test -f 'effects/noiseadd.c' || echo '$(srcdir)/'`effects/noiseadd.c

noiseadd.obj: effects/noiseadd.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noiseadd.obj -MD -MP -MF "$(DEPDIR)/noiseadd.Tpo" \
@am__fastdepCC_TRUE@	  -c -o noiseadd.obj `if test -f 'effects/noiseadd.c'; then $(CYGPATH_W) 'effects/noiseadd.c'; else $(CYGPATH_W) '$(srcdir)/effects/noiseadd.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/noiseadd.Tpo" "$(DEPDIR)/noiseadd.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/noiseadd.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/noiseadd.c' object='noiseadd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/noiseadd.Po' tmpdepfile='$(DEPDIR)/noiseadd.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noiseadd.obj `if test -f 'effects/noiseadd.c'; then $(CYGPATH_W) 'effects/noiseadd.c'; else $(CYGPATH_W) '$(srcdir)/effects/noiseadd.c'; fi`

noiseadd.lo: effects/noiseadd.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noiseadd.lo -MD -MP -MF "$(DEPDIR)/noiseadd.Tpo" \
@am__fastdepCC_TRUE@	  -c -o noiseadd.lo `test -f 'effects/noiseadd.c' || echo '$(srcdir)/'`effects/noiseadd.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/noiseadd.Tpo" "$(DEPDIR)/noiseadd.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/noiseadd.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/noiseadd.c' object='noiseadd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/noiseadd.Plo' tmpdepfile='$(DEPDIR)/noiseadd.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noiseadd.lo `test -f 'effects/noiseadd.c' || echo '$(srcdir)/'`effects/noiseadd.c

contrast.o: effects/contrast.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT contrast.o -MD -MP -MF "$(DEPDIR)/contrast.Tpo" \
@am__fastdepCC_TRUE@	  -c -o contrast.o `test -f 'effects/contrast.c' || echo '$(srcdir)/'`effects/contrast.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/contrast.Tpo" "$(DEPDIR)/contrast.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/contrast.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/contrast.c' object='contrast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/contrast.Po' tmpdepfile='$(DEPDIR)/contrast.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o contrast.o `test -f 'effects/contrast.c' || echo '$(srcdir)/'`effects/contrast.c

contrast.obj: effects/contrast.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT contrast.obj -MD -MP -MF "$(DEPDIR)/contrast.Tpo" \
@am__fastdepCC_TRUE@	  -c -o contrast.obj `if test -f 'effects/contrast.c'; then $(CYGPATH_W) 'effects/contrast.c'; else $(CYGPATH_W) '$(srcdir)/effects/contrast.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/contrast.Tpo" "$(DEPDIR)/contrast.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/contrast.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/contrast.c' object='contrast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/contrast.Po' tmpdepfile='$(DEPDIR)/contrast.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o contrast.obj `if test -f 'effects/contrast.c'; then $(CYGPATH_W) 'effects/contrast.c'; else $(CYGPATH_W) '$(srcdir)/effects/contrast.c'; fi`

contrast.lo: effects/contrast.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT contrast.lo -MD -MP -MF "$(DEPDIR)/contrast.Tpo" \
@am__fastdepCC_TRUE@	  -c -o contrast.lo `test -f 'effects/contrast.c' || echo '$(srcdir)/'`effects/contrast.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/contrast.Tpo" "$(DEPDIR)/contrast.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/contrast.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/contrast.c' object='contrast.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/contrast.Plo' tmpdepfile='$(DEPDIR)/contrast.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o contrast.lo `test -f 'effects/contrast.c' || echo '$(srcdir)/'`effects/contrast.c

motionblur.o: effects/motionblur.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT motionblur.o -MD -MP -MF "$(DEPDIR)/motionblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o motionblur.o `test -f 'effects/motionblur.c' || echo '$(srcdir)/'`effects/motionblur.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/motionblur.Tpo" "$(DEPDIR)/motionblur.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/motionblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/motionblur.c' object='motionblur.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/motionblur.Po' tmpdepfile='$(DEPDIR)/motionblur.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o motionblur.o `test -f 'effects/motionblur.c' || echo '$(srcdir)/'`effects/motionblur.c

motionblur.obj: effects/motionblur.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT motionblur.obj -MD -MP -MF "$(DEPDIR)/motionblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o motionblur.obj `if test -f 'effects/motionblur.c'; then $(CYGPATH_W) 'effects/motionblur.c'; else $(CYGPATH_W) '$(srcdir)/effects/motionblur.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/motionblur.Tpo" "$(DEPDIR)/motionblur.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/motionblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/motionblur.c' object='motionblur.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/motionblur.Po' tmpdepfile='$(DEPDIR)/motionblur.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o motionblur.obj `if test -f 'effects/motionblur.c'; then $(CYGPATH_W) 'effects/motionblur.c'; else $(CYGPATH_W) '$(srcdir)/effects/motionblur.c'; fi`

motionblur.lo: effects/motionblur.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT motionblur.lo -MD -MP -MF "$(DEPDIR)/motionblur.Tpo" \
@am__fastdepCC_TRUE@	  -c -o motionblur.lo `test -f 'effects/motionblur.c' || echo '$(srcdir)/'`effects/motionblur.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/motionblur.Tpo" "$(DEPDIR)/motionblur.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/motionblur.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/motionblur.c' object='motionblur.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/motionblur.Plo' tmpdepfile='$(DEPDIR)/motionblur.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o motionblur.lo `test -f 'effects/motionblur.c' || echo '$(srcdir)/'`effects/motionblur.c

sinoids.o: effects/sinoids.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sinoids.o -MD -MP -MF "$(DEPDIR)/sinoids.Tpo" \
@am__fastdepCC_TRUE@	  -c -o sinoids.o `test -f 'effects/sinoids.c' || echo '$(srcdir)/'`effects/sinoids.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/sinoids.Tpo" "$(DEPDIR)/sinoids.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/sinoids.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/sinoids.c' object='sinoids.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/sinoids.Po' tmpdepfile='$(DEPDIR)/sinoids.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sinoids.o `test -f 'effects/sinoids.c' || echo '$(srcdir)/'`effects/sinoids.c

sinoids.obj: effects/sinoids.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sinoids.obj -MD -MP -MF "$(DEPDIR)/sinoids.Tpo" \
@am__fastdepCC_TRUE@	  -c -o sinoids.obj `if test -f 'effects/sinoids.c'; then $(CYGPATH_W) 'effects/sinoids.c'; else $(CYGPATH_W) '$(srcdir)/effects/sinoids.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/sinoids.Tpo" "$(DEPDIR)/sinoids.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/sinoids.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/sinoids.c' object='sinoids.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/sinoids.Po' tmpdepfile='$(DEPDIR)/sinoids.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sinoids.obj `if test -f 'effects/sinoids.c'; then $(CYGPATH_W) 'effects/sinoids.c'; else $(CYGPATH_W) '$(srcdir)/effects/sinoids.c'; fi`

sinoids.lo: effects/sinoids.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sinoids.lo -MD -MP -MF "$(DEPDIR)/sinoids.Tpo" \
@am__fastdepCC_TRUE@	  -c -o sinoids.lo `test -f 'effects/sinoids.c' || echo '$(srcdir)/'`effects/sinoids.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/sinoids.Tpo" "$(DEPDIR)/sinoids.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/sinoids.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/sinoids.c' object='sinoids.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/sinoids.Plo' tmpdepfile='$(DEPDIR)/sinoids.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sinoids.lo `test -f 'effects/sinoids.c' || echo '$(srcdir)/'`effects/sinoids.c

average.o: effects/average.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT average.o -MD -MP -MF "$(DEPDIR)/average.Tpo" \
@am__fastdepCC_TRUE@	  -c -o average.o `test -f 'effects/average.c' || echo '$(srcdir)/'`effects/average.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/average.Tpo" "$(DEPDIR)/average.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/average.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/average.c' object='average.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/average.Po' tmpdepfile='$(DEPDIR)/average.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o average.o `test -f 'effects/average.c' || echo '$(srcdir)/'`effects/average.c

average.obj: effects/average.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT average.obj -MD -MP -MF "$(DEPDIR)/average.Tpo" \
@am__fastdepCC_TRUE@	  -c -o average.obj `if test -f 'effects/average.c'; then $(CYGPATH_W) 'effects/average.c'; else $(CYGPATH_W) '$(srcdir)/effects/average.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/average.Tpo" "$(DEPDIR)/average.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/average.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/average.c' object='average.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/average.Po' tmpdepfile='$(DEPDIR)/average.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o average.obj `if test -f 'effects/average.c'; then $(CYGPATH_W) 'effects/average.c'; else $(CYGPATH_W) '$(srcdir)/effects/average.c'; fi`

average.lo: effects/average.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT average.lo -MD -MP -MF "$(DEPDIR)/average.Tpo" \
@am__fastdepCC_TRUE@	  -c -o average.lo `test -f 'effects/average.c' || echo '$(srcdir)/'`effects/average.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/average.Tpo" "$(DEPDIR)/average.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/average.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/average.c' object='average.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/average.Plo' tmpdepfile='$(DEPDIR)/average.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o average.lo `test -f 'effects/average.c' || echo '$(srcdir)/'`effects/average.c

ripple.o: effects/ripple.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ripple.o -MD -MP -MF "$(DEPDIR)/ripple.Tpo" \
@am__fastdepCC_TRUE@	  -c -o ripple.o `test -f 'effects/ripple.c' || echo '$(srcdir)/'`effects/ripple.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/ripple.Tpo" "$(DEPDIR)/ripple.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/ripple.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/ripple.c' object='ripple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/ripple.Po' tmpdepfile='$(DEPDIR)/ripple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ripple.o `test -f 'effects/ripple.c' || echo '$(srcdir)/'`effects/ripple.c

ripple.obj: effects/ripple.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ripple.obj -MD -MP -MF "$(DEPDIR)/ripple.Tpo" \
@am__fastdepCC_TRUE@	  -c -o ripple.obj `if test -f 'effects/ripple.c'; then $(CYGPATH_W) 'effects/ripple.c'; else $(CYGPATH_W) '$(srcdir)/effects/ripple.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/ripple.Tpo" "$(DEPDIR)/ripple.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/ripple.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/ripple.c' object='ripple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/ripple.Po' tmpdepfile='$(DEPDIR)/ripple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ripple.obj `if test -f 'effects/ripple.c'; then $(CYGPATH_W) 'effects/ripple.c'; else $(CYGPATH_W) '$(srcdir)/effects/ripple.c'; fi`

ripple.lo: effects/ripple.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ripple.lo -MD -MP -MF "$(DEPDIR)/ripple.Tpo" \
@am__fastdepCC_TRUE@	  -c -o ripple.lo `test -f 'effects/ripple.c' || echo '$(srcdir)/'`effects/ripple.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/ripple.Tpo" "$(DEPDIR)/ripple.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/ripple.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/ripple.c' object='ripple.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/ripple.Plo' tmpdepfile='$(DEPDIR)/ripple.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ripple.lo `test -f 'effects/ripple.c' || echo '$(srcdir)/'`effects/ripple.c

water.o: effects/water.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT water.o -MD -MP -MF "$(DEPDIR)/water.Tpo" \
@am__fastdepCC_TRUE@	  -c -o water.o `test -f 'effects/water.c' || echo '$(srcdir)/'`effects/water.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/water.Tpo" "$(DEPDIR)/water.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/water.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/water.c' object='water.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/water.Po' tmpdepfile='$(DEPDIR)/water.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o water.o `test -f 'effects/water.c' || echo '$(srcdir)/'`effects/water.c

water.obj: effects/water.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT water.obj -MD -MP -MF "$(DEPDIR)/water.Tpo" \
@am__fastdepCC_TRUE@	  -c -o water.obj `if test -f 'effects/water.c'; then $(CYGPATH_W) 'effects/water.c'; else $(CYGPATH_W) '$(srcdir)/effects/water.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/water.Tpo" "$(DEPDIR)/water.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/water.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/water.c' object='water.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/water.Po' tmpdepfile='$(DEPDIR)/water.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o water.obj `if test -f 'effects/water.c'; then $(CYGPATH_W) 'effects/water.c'; else $(CYGPATH_W) '$(srcdir)/effects/water.c'; fi`

water.lo: effects/water.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT water.lo -MD -MP -MF "$(DEPDIR)/water.Tpo" \
@am__fastdepCC_TRUE@	  -c -o water.lo `test -f 'effects/water.c' || echo '$(srcdir)/'`effects/water.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/water.Tpo" "$(DEPDIR)/water.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/water.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/water.c' object='water.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/water.Plo' tmpdepfile='$(DEPDIR)/water.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o water.lo `test -f 'effects/water.c' || echo '$(srcdir)/'`effects/water.c

noisepencil.o: effects/noisepencil.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noisepencil.o -MD -MP -MF "$(DEPDIR)/noisepencil.Tpo" \
@am__fastdepCC_TRUE@	  -c -o noisepencil.o `test -f 'effects/noisepencil.c' || echo '$(srcdir)/'`effects/noisepencil.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/noisepencil.Tpo" "$(DEPDIR)/noisepencil.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/noisepencil.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/noisepencil.c' object='noisepencil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/noisepencil.Po' tmpdepfile='$(DEPDIR)/noisepencil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noisepencil.o `test -f 'effects/noisepencil.c' || echo '$(srcdir)/'`effects/noisepencil.c

noisepencil.obj: effects/noisepencil.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noisepencil.obj -MD -MP -MF "$(DEPDIR)/noisepencil.Tpo" \
@am__fastdepCC_TRUE@	  -c -o noisepencil.obj `if test -f 'effects/noisepencil.c'; then $(CYGPATH_W) 'effects/noisepencil.c'; else $(CYGPATH_W) '$(srcdir)/effects/noisepencil.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/noisepencil.Tpo" "$(DEPDIR)/noisepencil.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/noisepencil.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/noisepencil.c' object='noisepencil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/noisepencil.Po' tmpdepfile='$(DEPDIR)/noisepencil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noisepencil.obj `if test -f 'effects/noisepencil.c'; then $(CYGPATH_W) 'effects/noisepencil.c'; else $(CYGPATH_W) '$(srcdir)/effects/noisepencil.c'; fi`

noisepencil.lo: effects/noisepencil.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noisepencil.lo -MD -MP -MF "$(DEPDIR)/noisepencil.Tpo" \
@am__fastdepCC_TRUE@	  -c -o noisepencil.lo `test -f 'effects/noisepencil.c' || echo '$(srcdir)/'`effects/noisepencil.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/noisepencil.Tpo" "$(DEPDIR)/noisepencil.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/noisepencil.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/noisepencil.c' object='noisepencil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/noisepencil.Plo' tmpdepfile='$(DEPDIR)/noisepencil.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noisepencil.lo `test -f 'effects/noisepencil.c' || echo '$(srcdir)/'`effects/noisepencil.c

bathroom.o: effects/bathroom.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bathroom.o -MD -MP -MF "$(DEPDIR)/bathroom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o bathroom.o `test -f 'effects/bathroom.c' || echo '$(srcdir)/'`effects/bathroom.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/bathroom.Tpo" "$(DEPDIR)/bathroom.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/bathroom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/bathroom.c' object='bathroom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/bathroom.Po' tmpdepfile='$(DEPDIR)/bathroom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bathroom.o `test -f 'effects/bathroom.c' || echo '$(srcdir)/'`effects/bathroom.c

bathroom.obj: effects/bathroom.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bathroom.obj -MD -MP -MF "$(DEPDIR)/bathroom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o bathroom.obj `if test -f 'effects/bathroom.c'; then $(CYGPATH_W) 'effects/bathroom.c'; else $(CYGPATH_W) '$(srcdir)/effects/bathroom.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/bathroom.Tpo" "$(DEPDIR)/bathroom.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/bathroom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/bathroom.c' object='bathroom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/bathroom.Po' tmpdepfile='$(DEPDIR)/bathroom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bathroom.obj `if test -f 'effects/bathroom.c'; then $(CYGPATH_W) 'effects/bathroom.c'; else $(CYGPATH_W) '$(srcdir)/effects/bathroom.c'; fi`

bathroom.lo: effects/bathroom.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bathroom.lo -MD -MP -MF "$(DEPDIR)/bathroom.Tpo" \
@am__fastdepCC_TRUE@	  -c -o bathroom.lo `test -f 'effects/bathroom.c' || echo '$(srcdir)/'`effects/bathroom.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/bathroom.Tpo" "$(DEPDIR)/bathroom.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/bathroom.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/bathroom.c' object='bathroom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/bathroom.Plo' tmpdepfile='$(DEPDIR)/bathroom.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bathroom.lo `test -f 'effects/bathroom.c' || echo '$(srcdir)/'`effects/bathroom.c

slice.o: effects/slice.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slice.o -MD -MP -MF "$(DEPDIR)/slice.Tpo" \
@am__fastdepCC_TRUE@	  -c -o slice.o `test -f 'effects/slice.c' || echo '$(srcdir)/'`effects/slice.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/slice.Tpo" "$(DEPDIR)/slice.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/slice.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/slice.c' object='slice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/slice.Po' tmpdepfile='$(DEPDIR)/slice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slice.o `test -f 'effects/slice.c' || echo '$(srcdir)/'`effects/slice.c

slice.obj: effects/slice.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slice.obj -MD -MP -MF "$(DEPDIR)/slice.Tpo" \
@am__fastdepCC_TRUE@	  -c -o slice.obj `if test -f 'effects/slice.c'; then $(CYGPATH_W) 'effects/slice.c'; else $(CYGPATH_W) '$(srcdir)/effects/slice.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/slice.Tpo" "$(DEPDIR)/slice.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/slice.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/slice.c' object='slice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/slice.Po' tmpdepfile='$(DEPDIR)/slice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slice.obj `if test -f 'effects/slice.c'; then $(CYGPATH_W) 'effects/slice.c'; else $(CYGPATH_W) '$(srcdir)/effects/slice.c'; fi`

slice.lo: effects/slice.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slice.lo -MD -MP -MF "$(DEPDIR)/slice.Tpo" \
@am__fastdepCC_TRUE@	  -c -o slice.lo `test -f 'effects/slice.c' || echo '$(srcdir)/'`effects/slice.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/slice.Tpo" "$(DEPDIR)/slice.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/slice.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/slice.c' object='slice.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/slice.Plo' tmpdepfile='$(DEPDIR)/slice.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slice.lo `test -f 'effects/slice.c' || echo '$(srcdir)/'`effects/slice.c

crosspixel.o: effects/crosspixel.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crosspixel.o -MD -MP -MF "$(DEPDIR)/crosspixel.Tpo" \
@am__fastdepCC_TRUE@	  -c -o crosspixel.o `test -f 'effects/crosspixel.c' || echo '$(srcdir)/'`effects/crosspixel.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/crosspixel.Tpo" "$(DEPDIR)/crosspixel.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/crosspixel.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/crosspixel.c' object='crosspixel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/crosspixel.Po' tmpdepfile='$(DEPDIR)/crosspixel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crosspixel.o `test -f 'effects/crosspixel.c' || echo '$(srcdir)/'`effects/crosspixel.c

crosspixel.obj: effects/crosspixel.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crosspixel.obj -MD -MP -MF "$(DEPDIR)/crosspixel.Tpo" \
@am__fastdepCC_TRUE@	  -c -o crosspixel.obj `if test -f 'effects/crosspixel.c'; then $(CYGPATH_W) 'effects/crosspixel.c'; else $(CYGPATH_W) '$(srcdir)/effects/crosspixel.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/crosspixel.Tpo" "$(DEPDIR)/crosspixel.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/crosspixel.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/crosspixel.c' object='crosspixel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/crosspixel.Po' tmpdepfile='$(DEPDIR)/crosspixel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crosspixel.obj `if test -f 'effects/crosspixel.c'; then $(CYGPATH_W) 'effects/crosspixel.c'; else $(CYGPATH_W) '$(srcdir)/effects/crosspixel.c'; fi`

crosspixel.lo: effects/crosspixel.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crosspixel.lo -MD -MP -MF "$(DEPDIR)/crosspixel.Tpo" \
@am__fastdepCC_TRUE@	  -c -o crosspixel.lo `test -f 'effects/crosspixel.c' || echo '$(srcdir)/'`effects/crosspixel.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/crosspixel.Tpo" "$(DEPDIR)/crosspixel.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/crosspixel.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effects/crosspixel.c' object='crosspixel.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/crosspixel.Plo' tmpdepfile='$(DEPDIR)/crosspixel.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crosspixel.lo `test -f 'effects/crosspixel.c' || echo '$(srcdir)/'`effects/crosspixel.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
install-binPROGRAMS: install-libLTLIBRARIES


installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
